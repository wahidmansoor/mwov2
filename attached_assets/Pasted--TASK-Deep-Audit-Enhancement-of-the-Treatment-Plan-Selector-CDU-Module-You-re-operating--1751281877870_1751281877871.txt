
📌 TASK: Deep Audit + Enhancement of the Treatment Plan Selector (CDU Module)

You're operating inside a non-EHR clinical guidance tool built with React + Node.js hosted on Replit. The "Treatment Plan Selector" segment helps oncologists choose evidence-based therapies based on patient characteristics and NCCN-aligned data.

---

## 🎯 OBJECTIVES

### ✅ 1. **Audit the Current State**
- Identify how histology types, biomarkers, treatment intents, prior therapies, and reasons for change are handled.
- Determine whether they are hardcoded or dynamically fetched.
- Check if existing dropdowns are based on an outdated or partial data model.

---

### 🔁 2. **Replace/Upgrade the Data Model with These Specifications**

#### 📌 Histology Types (Primary + Recommended):
```

Adenocarcinoma, Squamous Cell, Large Cell, Small Cell, Ductal, Lobular,
Neuroendocrine, Sarcoma, Melanoma, Transitional Cell, Medullary, Papillary,
Clear Cell, Mucinous, Signet Ring Cell, Undifferentiated, Anaplastic

```

#### 📌 Biomarkers (Common + Future-Ready):
```

ER+, ER-, PR+, PR-, HER2+, HER2-, PD-L1+, PD-L1-, MSI-H, MSS, ALK+, EGFR+,
KRAS+, BRAF+, BRCA1+, BRCA2+, TMB-High, RET+, ROS1+, MET+, FGFR2/3+, IDH1/2+,
CTLA-4+, TP53+

```

#### 📌 Reasons for Treatment Change:
```

Not applicable, Disease Progression, Toxicity/Intolerance, Resistance,
Completion of Treatment, Patient Preference

````

#### 📌 Additions (Optional Advanced):
- Treatment Line (`1st line`, `2nd line`, `Maintenance`, `Adjuvant`, `Neoadjuvant`)
- Treatment Intent (`Curative`, `Palliative`, `Adjuvant`, `Neoadjuvant`)

---

## 🧠 3. **Database Enhancements**

If any of the above are hardcoded or not normalized, create a **new table**:

```sql
CREATE TABLE treatment_plan_criteria (
  id SERIAL PRIMARY KEY,
  category TEXT NOT NULL,  -- 'histology', 'biomarker', 'reason', 'intent', 'line'
  value TEXT NOT NULL
);
````

Seed this table using a new script: `seedTreatmentCriteria.ts`.

---

## 🔍 4. **Link to NCCN Treatment Mapping**

If treatment recommendations are currently matched using a static or flat lookup:

1. Create a structured table:

```sql
CREATE TABLE treatment_plan_mappings (
  id SERIAL PRIMARY KEY,
  cancer_type TEXT,
  histology TEXT,
  biomarkers TEXT[],
  treatment_intent TEXT,
  line_of_treatment TEXT,
  treatment_protocol TEXT,
  evidence_reference TEXT
);
```

2. Implement backend logic or AI handler to:

   * Query treatment mappings using user-selected criteria.
   * Fallback to **AI/NCCN** logic if direct match is not found.
   * Ensure NCCN references or links are included in protocol suggestions.

---

## 🧩 5. **Frontend Adjustments (React UI)**

### Components to Modify:

* `TreatmentPlanSelector.tsx`
* Any components responsible for rendering criteria dropdowns or biomarker selectors.

### Requirements:

* Dropdowns should be **populated dynamically** using API (`/api/treatment-criteria`)
* Biomarkers: Display as **multi-select checkboxes** or **tag-based filters**
* Add tooltips or info-icons with definitions (for example, “MSI-H = microsatellite instability high”)
* Add visual separators between common and rare biomarkers (future update)
* All selections should influence AI protocol suggestions + export readiness.

---

## 🔗 6. **API & Route Requirements**

Add or update the following endpoints:

* `GET /api/treatment-criteria` – Returns all histology, biomarkers, etc.
* `GET /api/treatment-plan-mappings` – Returns all mapped protocols
* `POST /api/generate-recommendation` – (optional) Calls AI model with criteria for smart matching

---

## 📤 7. **Export Logic**

Ensure that once a plan is selected, export buttons:

* Display the selected criteria
* Include mapped protocol + biomarker rationale
* Add NCCN reference citation
* Allow both `.PDF` and `.MD` exports

---

## 🚧 8. Safeguards and Validation

* ✅ Sanitize biomarker selection to avoid conflicting pairs (e.g., ER+ with ER-)
* ✅ Highlight incomplete entries (e.g., no histology selected)
* ✅ Allow AI assistant to auto-fill missing fields if given only partial info

---

## 📘 Summary

| Segment           | Action Required                                                    |
| ----------------- | ------------------------------------------------------------------ |
| Histology         | Expand list, dynamically load, seed table                          |
| Biomarkers        | Expand list, checkbox UI, load from DB                             |
| Reason for Change | Load from DB, standardize values                                   |
| Treatment Logic   | Connect to AI or rule-based NCCN logic                             |
| Database          | Add `treatment_plan_criteria` & `mappings`                         |
| UI                | Update dropdowns and selector UX                                   |
| Export Section    | Update with smart summary + evidence tags                          |
| API Routes        | Add `/treatment-criteria`, `/mappings`, `/generate-recommendation` |
| Optional AI       | Smart fill or suggest plan based on selected data                  |

---

🏁 Final Note: Make sure the Treatment Plan Selector segment is modular and future-ready. The ability to expand biomarkers and histology dynamically from DB is essential. If any existing logic is broken (especially TreatmentPlanSelector), repair it with appropriate routing, typing, and fallback logic using NCCN protocols.

```

