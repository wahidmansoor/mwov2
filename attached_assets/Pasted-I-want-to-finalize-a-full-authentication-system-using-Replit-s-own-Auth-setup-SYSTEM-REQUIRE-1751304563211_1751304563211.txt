I want to finalize a full authentication system using Replit's own Auth setup.

üõ†Ô∏è SYSTEM REQUIREMENTS:

1. ‚úÖ Use Replit Auth system (https://docs.replit.com/hosting/authentication)
2. ‚úÖ Enable and configure third-party login providers:
   - Google
   - Apple
   (These are already selected in Replit's Auth settings)

3. ‚úÖ After the user signs up or logs in via Google/Apple:
   - The system should check if the user has been approved.
   - If not approved, show a message like: ‚ÄúYour account is awaiting admin approval. You‚Äôll be notified once approved.‚Äù

4. ‚úÖ Admin (wahidmans007@gmail.com) should receive an email when a new user registers, including:
   - User‚Äôs email
   - Full name (if available)
   - Time of registration
   - A clickable button or a unique identifier I can use to manually approve the user in a JSON file or simple admin dashboard.

5. ‚úÖ A database (Replit Database or a JSON file) should be used to store:
   - User ID
   - Email
   - Name
   - Approved: true/false
   - Timestamp

6. ‚úÖ After I approve the user (by toggling a flag or clicking approve):
   - The next login should allow full access to the app.

7. ‚úÖ **All pages and all sections of the app must be protected:**
   - No one can view or access any page unless logged in **and** approved.
   - If not logged in, they must be redirected to login.
   - If logged in but not approved, redirect to a ‚ÄúWaiting for Admin Approval‚Äù screen with a logout option.

8. ‚úÖ Optional admin dashboard:
   - Allow admin to see a list of pending users.
   - Provide simple Approve/Reject buttons for each entry.

9. ‚úÖ Use proper async/await error handling for:
   - Auth flow
   - Replit Database access
   - Email notifications

üì© Email configuration:
- Set up a simple SMTP-based or Replit-native system to send approval request emails to **wahidmans007@gmail.com**.
- Keep the email format clean, readable, and include necessary metadata (name, email, time).

üìò DELIVERABLES:
- All auth logic (frontend + backend)
- Database or JSON logic for storing approval state
- Email sender function
- Protected route mechanism
- Optional admin UI
- A README that explains:
   - How the approval flow works
   - How to change admin email
   - How to approve a user manually

‚úÖ The final system must run perfectly on Replit deployment, not just local mode.

Please keep the code modular, clean, and beginner-friendly, optimized for performance and clarity.
