import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { useState } from "react";

type DirectiveDocument = {
  id: string;
  name: string;
  description: string;
  legalStatus: string;
  whenToUse: string;
  exampleContent?: string;
};

type DecisionOption = {
  id: string;
  name: string;
  description: string;
  considerations: string[];
};

export function AdvanceDirectivesDialog() {
  const [isOpen, setIsOpen] = useState(false);
  const [activeTab, setActiveTab] = useState("documents");

  const legalDocuments: DirectiveDocument[] = [
    {
      id: "advance-directive",
      name: "Advance Directive",
      description: "General wishes about future medical care",
      legalStatus: "Informative in most states",
      whenToUse: "For all adults to document general preferences",
    },
    {
      id: "living-will",
      name: "Living Will",
      description: "Specific instructions for terminal illness scenarios",
      legalStatus: "Legally binding in most states",
      whenToUse: "When patient wants to specify end-of-life care preferences",
      exampleContent: "If I have an incurable condition and am unable to make decisions, I direct my physicians to...",
    },
    {
      id: "dpoa-hc",
      name: "Durable Power of Attorney for Healthcare",
      description: "Designates a healthcare decision-maker",
      legalStatus: "Legally binding",
      whenToUse: "To appoint someone to make decisions if you become incapacitated",
    },
    {
      id: "polst",
      name: "POLST/MOLST",
      description: "Medical orders for current treatment preferences",
      legalStatus: "Physician orders",
      whenToUse: "For seriously ill patients to translate wishes into actionable medical orders",
    },
  ];

  const treatmentOptions: DecisionOption[] = [
    {
      id: "cpr",
      name: "CPR",
      description: "Cardiopulmonary resuscitation for cardiac arrest",
      considerations: [
        "Low survival rates in terminal illness",
        "May result in broken ribs and prolonged ICU stay",
        "Often not recommended for advanced illness",
      ],
    },
    {
      id: "ventilation",
      name: "Mechanical Ventilation",
      description: "Breathing machine support",
      considerations: [
        "Temporary vs. long-term use",
        "Quality of life considerations",
        "Difficulty weaning in progressive illness",
      ],
    },
    {
      id: "feeding-tube",
      name: "Tube Feeding",
      description: "Artificial nutrition through tube",
      considerations: [
        "Limited benefit in advanced dementia",
        "Does not necessarily prevent aspiration",
        "May prolong dying process",
      ],
    },
    {
      id: "hospice",
      name: "Hospice Care",
      description: "Comfort-focused end-of-life care",
      considerations: [
        "Requires prognosis of 6 months or less",
        "Focuses on quality of life",
        "Provides comprehensive support for patient and family",
      ],
    },
  ];

  const conversationStarters = [
    "What matters most to you when you think about your healthcare?",
    "What would you consider an unacceptable quality of life?",
    "Who would you want to make decisions if you couldn't speak for yourself?",
    "How important is it for you to be at home versus in a hospital?",
  ];

  return (
    <Dialog open={isOpen} onOpenChange={setIsOpen}>
      <DialogContent className="max-w-4xl">
        <DialogHeader>
          <DialogTitle>Advance Care Planning</DialogTitle>
          <DialogDescription>
            Document and communicate your healthcare preferences for future medical decisions
          </DialogDescription>
        </DialogHeader>

        <Tabs value={activeTab} onValueChange={setActiveTab} className="mt-4">
          <TabsList className="grid w-full grid-cols-3">
            <TabsTrigger value="documents">Legal Documents</TabsTrigger>
            <TabsTrigger value="decisions">Treatment Options</TabsTrigger>
            <TabsTrigger value="communication">Conversation Guides</TabsTrigger>
          </TabsList>

          <ScrollArea className="h-[500px] p-4">
            <TabsContent value="documents">
              <h3 className="text-lg font-semibold mb-4">Key Legal Documents</h3>
              <div className="space-y-6">
                {legalDocuments.map((doc) => (
                  <div key={doc.id} className="border rounded-lg p-4">
                    <h4 className="font-medium text-lg">{doc.name}</h4>
                    <p className="text-sm text-muted-foreground">{doc.description}</p>
                    <div className="mt-2 grid grid-cols-2 gap-2">
                      <div>
                        <p className="text-xs font-medium">Legal Status:</p>
                        <p className="text-sm">{doc.legalStatus}</p>
                      </div>
                      <div>
                        <p className="text-xs font-medium">When to Use:</p>
                        <p className="text-sm">{doc.whenToUse}</p>
                      </div>
                    </div>
                    {doc.exampleContent && (
                      <div className="mt-3 p-3 bg-muted/50 rounded text-sm">
                        <p className="text-xs font-medium mb-1">Example:</p>
                        <p>{doc.exampleContent}</p>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </TabsContent>

            <TabsContent value="decisions">
              <h3 className="text-lg font-semibold mb-4">Common Treatment Decisions</h3>
              <div className="space-y-6">
                {treatmentOptions.map((option) => (
                  <div key={option.id} className="border rounded-lg p-4">
                    <h4 className="font-medium text-lg">{option.name}</h4>
                    <p className="text-sm text-muted-foreground">{option.description}</p>
                    <div className="mt-3">
                      <p className="text-sm font-medium">Key Considerations:</p>
                      <ul className="list-disc pl-5 space-y-1 mt-1">
                        {option.considerations.map((item, i) => (
                          <li key={i} className="text-sm">
                            {item}
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                ))}
              </div>
            </TabsContent>

            <TabsContent value="communication">
              <h3 className="text-lg font-semibold mb-4">Starting the Conversation</h3>
              <div className="space-y-4">
                <div>
                  <p className="font-medium mb-2">Open-Ended Questions:</p>
                  <div className="space-y-2">
                    {conversationStarters.map((question, i) => (
                      <div key={i} className="p-3 bg-muted/50 rounded">
                        <p className="text-sm">"{question}"</p>
                      </div>
                    ))}
                  </div>
                </div>

                <div className="mt-6">
                  <p className="font-medium mb-2">Three-Talk Model Framework:</p>
                  <div className="grid grid-cols-3 gap-4">
                    <div className="border p-3 rounded">
                      <p className="font-medium text-sm">1. Choice Talk</p>
                      <p className="text-sm mt-1">
                        Introduce that options exist and decisions need to be made
                      </p>
                    </div>
                    <div className="border p-3 rounded">
                      <p className="font-medium text-sm">2. Option Talk</p>
                      <p className="text-sm mt-1">
                        Discuss risks/benefits of all available choices
                      </p>
                    </div>
                    <div className="border p-3 rounded">
                      <p className="font-medium text-sm">3. Decision Talk</p>
                      <p className="text-sm mt-1">
                        Support patient/surrogate in reaching a values-aligned decision
                      </p>
                    </div>
                  </div>
                </div>

                <div className="mt-6">
                  <p className="font-medium mb-2">Special Population Considerations:</p>
                  <div className="grid grid-cols-3 gap-4">
                    <div className="border p-3 rounded">
                      <p className="font-medium text-sm">Dementia Patients</p>
                      <p className="text-sm mt-1">
                        Early planning crucial due to progressive cognitive decline
                      </p>
                    </div>
                    <div className="border p-3 rounded">
                      <p className="font-medium text-sm">Cultural Diversity</p>
                      <p className="text-sm mt-1">
                        Respect different beliefs about death and dying
                      </p>
                    </div>
                    <div className="border p-3 rounded">
                      <p className="font-medium text-sm">Pediatrics</p>
                      <p className="text-sm mt-1">
                        Parents as primary decision-makers with child involvement when appropriate
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </TabsContent>
          </ScrollArea>
        </Tabs>
      </DialogContent>
    </Dialog>
  );
}