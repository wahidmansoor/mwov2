import { z } from "zod";
export declare const sessions: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "sessions";
    schema: undefined;
    columns: {
        sid: import("drizzle-orm/pg-core").PgColumn<{
            name: "sid";
            tableName: "sessions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        sess: import("drizzle-orm/pg-core").PgColumn<{
            name: "sess";
            tableName: "sessions";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        expire: import("drizzle-orm/pg-core").PgColumn<{
            name: "expire";
            tableName: "sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const users: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "users";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        email: import("drizzle-orm/pg-core").PgColumn<{
            name: "email";
            tableName: "users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        firstName: import("drizzle-orm/pg-core").PgColumn<{
            name: "first_name";
            tableName: "users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        lastName: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_name";
            tableName: "users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        profileImageUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "profile_image_url";
            tableName: "users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        role: import("drizzle-orm/pg-core").PgColumn<{
            name: "role";
            tableName: "users";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        department: import("drizzle-orm/pg-core").PgColumn<{
            name: "department";
            tableName: "users";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        licenseNumber: import("drizzle-orm/pg-core").PgColumn<{
            name: "license_number";
            tableName: "users";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "users";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const clinicalProtocols: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "clinical_protocols";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "clinical_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        name: import("drizzle-orm/pg-core").PgColumn<{
            name: "name";
            tableName: "clinical_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        version: import("drizzle-orm/pg-core").PgColumn<{
            name: "version";
            tableName: "clinical_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        protocolType: import("drizzle-orm/pg-core").PgColumn<{
            name: "protocol_type";
            tableName: "clinical_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        cancerType: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_type";
            tableName: "clinical_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        stage: import("drizzle-orm/pg-core").PgColumn<{
            name: "stage";
            tableName: "clinical_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        content: import("drizzle-orm/pg-core").PgColumn<{
            name: "content";
            tableName: "clinical_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "clinical_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        guidelineSource: import("drizzle-orm/pg-core").PgColumn<{
            name: "guideline_source";
            tableName: "clinical_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        createdBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_by";
            tableName: "clinical_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "clinical_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "clinical_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "clinical_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        approvalStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "approval_status";
            tableName: "clinical_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        approvedBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "approved_by";
            tableName: "clinical_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        approvedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "approved_at";
            tableName: "clinical_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const clinicalDecisionRules: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "clinical_decision_rules";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "clinical_decision_rules";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        ruleName: import("drizzle-orm/pg-core").PgColumn<{
            name: "rule_name";
            tableName: "clinical_decision_rules";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        moduleType: import("drizzle-orm/pg-core").PgColumn<{
            name: "module_type";
            tableName: "clinical_decision_rules";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        conditions: import("drizzle-orm/pg-core").PgColumn<{
            name: "conditions";
            tableName: "clinical_decision_rules";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        recommendations: import("drizzle-orm/pg-core").PgColumn<{
            name: "recommendations";
            tableName: "clinical_decision_rules";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        confidenceThreshold: import("drizzle-orm/pg-core").PgColumn<{
            name: "confidence_threshold";
            tableName: "clinical_decision_rules";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        evidenceReferences: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_references";
            tableName: "clinical_decision_rules";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "clinical_decision_rules";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "clinical_decision_rules";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "clinical_decision_rules";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const aiInteractions: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "ai_interactions";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "ai_interactions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "ai_interactions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "ai_interactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        moduleType: import("drizzle-orm/pg-core").PgColumn<{
            name: "module_type";
            tableName: "ai_interactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        intent: import("drizzle-orm/pg-core").PgColumn<{
            name: "intent";
            tableName: "ai_interactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        inputContext: import("drizzle-orm/pg-core").PgColumn<{
            name: "input_context";
            tableName: "ai_interactions";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        aiResponse: import("drizzle-orm/pg-core").PgColumn<{
            name: "ai_response";
            tableName: "ai_interactions";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        confidenceScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "confidence_score";
            tableName: "ai_interactions";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        userFeedback: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_feedback";
            tableName: "ai_interactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        responseTimeMs: import("drizzle-orm/pg-core").PgColumn<{
            name: "response_time_ms";
            tableName: "ai_interactions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        modelVersion: import("drizzle-orm/pg-core").PgColumn<{
            name: "model_version";
            tableName: "ai_interactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "ai_interactions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const auditLog: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "audit_log";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "audit_log";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "audit_log";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        userRole: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_role";
            tableName: "audit_log";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        action: import("drizzle-orm/pg-core").PgColumn<{
            name: "action";
            tableName: "audit_log";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        resource: import("drizzle-orm/pg-core").PgColumn<{
            name: "resource";
            tableName: "audit_log";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        resourceId: import("drizzle-orm/pg-core").PgColumn<{
            name: "resource_id";
            tableName: "audit_log";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        oldValues: import("drizzle-orm/pg-core").PgColumn<{
            name: "old_values";
            tableName: "audit_log";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        newValues: import("drizzle-orm/pg-core").PgColumn<{
            name: "new_values";
            tableName: "audit_log";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        ipAddress: import("drizzle-orm/pg-core").PgColumn<{
            name: "ip_address";
            tableName: "audit_log";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        userAgent: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_agent";
            tableName: "audit_log";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        timestamp: import("drizzle-orm/pg-core").PgColumn<{
            name: "timestamp";
            tableName: "audit_log";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sensitiveData: import("drizzle-orm/pg-core").PgColumn<{
            name: "sensitive_data";
            tableName: "audit_log";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const decisionSupportInputs: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "decision_support_inputs";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "decision_support_inputs";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "decision_support_inputs";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        ageGroup: import("drizzle-orm/pg-core").PgColumn<{
            name: "age_group";
            tableName: "decision_support_inputs";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        symptoms: import("drizzle-orm/pg-core").PgColumn<{
            name: "symptoms";
            tableName: "decision_support_inputs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        riskFactors: import("drizzle-orm/pg-core").PgColumn<{
            name: "risk_factors";
            tableName: "decision_support_inputs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        clinicalFindings: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_findings";
            tableName: "decision_support_inputs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        aiAnalysis: import("drizzle-orm/pg-core").PgColumn<{
            name: "ai_analysis";
            tableName: "decision_support_inputs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        moduleType: import("drizzle-orm/pg-core").PgColumn<{
            name: "module_type";
            tableName: "decision_support_inputs";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_by";
            tableName: "decision_support_inputs";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "decision_support_inputs";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "decision_support_inputs";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const treatmentProtocols: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "treatment_protocols";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "treatment_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        protocolCode: import("drizzle-orm/pg-core").PgColumn<{
            name: "protocol_code";
            tableName: "treatment_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        tumourGroup: import("drizzle-orm/pg-core").PgColumn<{
            name: "tumour_group";
            tableName: "treatment_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        protocolName: import("drizzle-orm/pg-core").PgColumn<{
            name: "protocol_name";
            tableName: "treatment_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        indications: import("drizzle-orm/pg-core").PgColumn<{
            name: "indications";
            tableName: "treatment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        contraindications: import("drizzle-orm/pg-core").PgColumn<{
            name: "contraindications";
            tableName: "treatment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        dosingSchedule: import("drizzle-orm/pg-core").PgColumn<{
            name: "dosing_schedule";
            tableName: "treatment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        toxicityProfile: import("drizzle-orm/pg-core").PgColumn<{
            name: "toxicity_profile";
            tableName: "treatment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoringRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_requirements";
            tableName: "treatment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "treatment_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "treatment_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const symptomManagement: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "symptom_management";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "symptom_management";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        symptom: import("drizzle-orm/pg-core").PgColumn<{
            name: "symptom";
            tableName: "symptom_management";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        assessmentTools: import("drizzle-orm/pg-core").PgColumn<{
            name: "assessment_tools";
            tableName: "symptom_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        interventions: import("drizzle-orm/pg-core").PgColumn<{
            name: "interventions";
            tableName: "symptom_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        medications: import("drizzle-orm/pg-core").PgColumn<{
            name: "medications";
            tableName: "symptom_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoringParameters: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_parameters";
            tableName: "symptom_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "symptom_management";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const cdProtocols: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "cd_protocols";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "cd_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        code: import("drizzle-orm/pg-core").PgColumn<{
            name: "code";
            tableName: "cd_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        tumourGroup: import("drizzle-orm/pg-core").PgColumn<{
            name: "tumour_group";
            tableName: "cd_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        tumourSupergroup: import("drizzle-orm/pg-core").PgColumn<{
            name: "tumour_supergroup";
            tableName: "cd_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        treatmentIntent: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_intent";
            tableName: "cd_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        summary: import("drizzle-orm/pg-core").PgColumn<{
            name: "summary";
            tableName: "cd_protocols";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        eligibility: import("drizzle-orm/pg-core").PgColumn<{
            name: "eligibility";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        precautions: import("drizzle-orm/pg-core").PgColumn<{
            name: "precautions";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        treatment: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        tests: import("drizzle-orm/pg-core").PgColumn<{
            name: "tests";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        doseModifications: import("drizzle-orm/pg-core").PgColumn<{
            name: "dose_modifications";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        referenceList: import("drizzle-orm/pg-core").PgColumn<{
            name: "reference_list";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        cycleInfo: import("drizzle-orm/pg-core").PgColumn<{
            name: "cycle_info";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        preMedications: import("drizzle-orm/pg-core").PgColumn<{
            name: "pre_medications";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        postMedications: import("drizzle-orm/pg-core").PgColumn<{
            name: "post_medications";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        supportiveCare: import("drizzle-orm/pg-core").PgColumn<{
            name: "supportive_care";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        rescueAgents: import("drizzle-orm/pg-core").PgColumn<{
            name: "rescue_agents";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoring: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        toxicityMonitoring: import("drizzle-orm/pg-core").PgColumn<{
            name: "toxicity_monitoring";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        interactions: import("drizzle-orm/pg-core").PgColumn<{
            name: "interactions";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        contraindications: import("drizzle-orm/pg-core").PgColumn<{
            name: "contraindications";
            tableName: "cd_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        version: import("drizzle-orm/pg-core").PgColumn<{
            name: "version";
            tableName: "cd_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 20;
        }>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "cd_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 20;
        }>;
        createdBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_by";
            tableName: "cd_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_by";
            tableName: "cd_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "cd_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "cd_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        lastReviewed: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_reviewed";
            tableName: "cd_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const oncologyMedications: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "oncology_medications";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "oncology_medications";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        name: import("drizzle-orm/pg-core").PgColumn<{
            name: "name";
            tableName: "oncology_medications";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        brandNames: import("drizzle-orm/pg-core").PgColumn<{
            name: "brand_names";
            tableName: "oncology_medications";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        classification: import("drizzle-orm/pg-core").PgColumn<{
            name: "classification";
            tableName: "oncology_medications";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        mechanism: import("drizzle-orm/pg-core").PgColumn<{
            name: "mechanism";
            tableName: "oncology_medications";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        administration: import("drizzle-orm/pg-core").PgColumn<{
            name: "administration";
            tableName: "oncology_medications";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        indications: import("drizzle-orm/pg-core").PgColumn<{
            name: "indications";
            tableName: "oncology_medications";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        dosing: import("drizzle-orm/pg-core").PgColumn<{
            name: "dosing";
            tableName: "oncology_medications";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sideEffects: import("drizzle-orm/pg-core").PgColumn<{
            name: "side_effects";
            tableName: "oncology_medications";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoring: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring";
            tableName: "oncology_medications";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        interactions: import("drizzle-orm/pg-core").PgColumn<{
            name: "interactions";
            tableName: "oncology_medications";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        referenceSources: import("drizzle-orm/pg-core").PgColumn<{
            name: "reference_sources";
            tableName: "oncology_medications";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        summary: import("drizzle-orm/pg-core").PgColumn<{
            name: "summary";
            tableName: "oncology_medications";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        blackBoxWarning: import("drizzle-orm/pg-core").PgColumn<{
            name: "black_box_warning";
            tableName: "oncology_medications";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        specialConsiderations: import("drizzle-orm/pg-core").PgColumn<{
            name: "special_considerations";
            tableName: "oncology_medications";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        pharmacokinetics: import("drizzle-orm/pg-core").PgColumn<{
            name: "pharmacokinetics";
            tableName: "oncology_medications";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        contraindications: import("drizzle-orm/pg-core").PgColumn<{
            name: "contraindications";
            tableName: "oncology_medications";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        routineMonitoring: import("drizzle-orm/pg-core").PgColumn<{
            name: "routine_monitoring";
            tableName: "oncology_medications";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        preTreatmentTests: import("drizzle-orm/pg-core").PgColumn<{
            name: "pre_treatment_tests";
            tableName: "oncology_medications";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isChemotherapy: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_chemotherapy";
            tableName: "oncology_medications";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isImmunotherapy: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_immunotherapy";
            tableName: "oncology_medications";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isTargetedTherapy: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_targeted_therapy";
            tableName: "oncology_medications";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isOrphanDrug: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_orphan_drug";
            tableName: "oncology_medications";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "oncology_medications";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "oncology_medications";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const insertUserSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    email: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    firstName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    lastName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    profileImageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    role: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    department: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    licenseNumber: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    email?: string | null | undefined;
    firstName?: string | null | undefined;
    lastName?: string | null | undefined;
    profileImageUrl?: string | null | undefined;
    role?: string | null | undefined;
    department?: string | null | undefined;
    licenseNumber?: string | null | undefined;
    isActive?: boolean | null | undefined;
}, {
    email?: string | null | undefined;
    firstName?: string | null | undefined;
    lastName?: string | null | undefined;
    profileImageUrl?: string | null | undefined;
    role?: string | null | undefined;
    department?: string | null | undefined;
    licenseNumber?: string | null | undefined;
    isActive?: boolean | null | undefined;
}>;
export declare const insertDecisionSupportInputSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ageGroup: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    symptoms: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    riskFactors: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    clinicalFindings: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    aiAnalysis: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    moduleType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdBy: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    symptoms?: import("drizzle-zod/utils").Json | undefined;
    createdBy?: string | null | undefined;
    moduleType?: string | null | undefined;
    sessionId?: string | null | undefined;
    ageGroup?: string | null | undefined;
    riskFactors?: import("drizzle-zod/utils").Json | undefined;
    clinicalFindings?: import("drizzle-zod/utils").Json | undefined;
    aiAnalysis?: import("drizzle-zod/utils").Json | undefined;
}, {
    symptoms?: import("drizzle-zod/utils").Json | undefined;
    createdBy?: string | null | undefined;
    moduleType?: string | null | undefined;
    sessionId?: string | null | undefined;
    ageGroup?: string | null | undefined;
    riskFactors?: import("drizzle-zod/utils").Json | undefined;
    clinicalFindings?: import("drizzle-zod/utils").Json | undefined;
    aiAnalysis?: import("drizzle-zod/utils").Json | undefined;
}>;
export declare const insertClinicalProtocolSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    name: z.ZodString;
    version: z.ZodString;
    protocolType: z.ZodString;
    cancerType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    stage: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    content: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    evidenceLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    guidelineSource: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdBy: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    approvalStatus: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    approvedBy: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    approvedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    version: string;
    name: string;
    protocolType: string;
    content: import("drizzle-zod/utils").Json;
    status?: string | null | undefined;
    cancerType?: string | null | undefined;
    stage?: string | null | undefined;
    evidenceLevel?: string | null | undefined;
    guidelineSource?: string | null | undefined;
    createdBy?: string | null | undefined;
    approvalStatus?: string | null | undefined;
    approvedBy?: string | null | undefined;
    approvedAt?: Date | null | undefined;
}, {
    version: string;
    name: string;
    protocolType: string;
    content: import("drizzle-zod/utils").Json;
    status?: string | null | undefined;
    cancerType?: string | null | undefined;
    stage?: string | null | undefined;
    evidenceLevel?: string | null | undefined;
    guidelineSource?: string | null | undefined;
    createdBy?: string | null | undefined;
    approvalStatus?: string | null | undefined;
    approvedBy?: string | null | undefined;
    approvedAt?: Date | null | undefined;
}>;
export declare const insertAiInteractionSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    sessionId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    moduleType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    intent: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    inputContext: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    aiResponse: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    confidenceScore: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    userFeedback: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    responseTimeMs: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    modelVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt">, "strip", z.ZodTypeAny, {
    userId?: string | null | undefined;
    moduleType?: string | null | undefined;
    sessionId?: string | null | undefined;
    intent?: string | null | undefined;
    inputContext?: import("drizzle-zod/utils").Json | undefined;
    aiResponse?: import("drizzle-zod/utils").Json | undefined;
    confidenceScore?: string | null | undefined;
    userFeedback?: string | null | undefined;
    responseTimeMs?: number | null | undefined;
    modelVersion?: string | null | undefined;
}, {
    userId?: string | null | undefined;
    moduleType?: string | null | undefined;
    sessionId?: string | null | undefined;
    intent?: string | null | undefined;
    inputContext?: import("drizzle-zod/utils").Json | undefined;
    aiResponse?: import("drizzle-zod/utils").Json | undefined;
    confidenceScore?: string | null | undefined;
    userFeedback?: string | null | undefined;
    responseTimeMs?: number | null | undefined;
    modelVersion?: string | null | undefined;
}>;
export declare const insertCdProtocolSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    code: z.ZodString;
    tumourGroup: z.ZodString;
    tumourSupergroup: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    treatmentIntent: z.ZodString;
    summary: z.ZodString;
    eligibility: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    precautions: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    treatment: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    tests: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    doseModifications: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    referenceList: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    cycleInfo: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    preMedications: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    postMedications: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    supportiveCare: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    rescueAgents: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    monitoring: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    toxicityMonitoring: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    interactions: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    contraindications: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    version: z.ZodString;
    status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdBy: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    updatedBy: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    lastReviewed: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    version: string;
    code: string;
    tumourGroup: string;
    treatmentIntent: string;
    summary: string;
    eligibility: import("drizzle-zod/utils").Json;
    precautions: import("drizzle-zod/utils").Json;
    treatment: import("drizzle-zod/utils").Json;
    status?: string | null | undefined;
    contraindications?: import("drizzle-zod/utils").Json | undefined;
    createdBy?: string | null | undefined;
    tumourSupergroup?: string | null | undefined;
    tests?: import("drizzle-zod/utils").Json | undefined;
    doseModifications?: import("drizzle-zod/utils").Json | undefined;
    referenceList?: import("drizzle-zod/utils").Json | undefined;
    cycleInfo?: import("drizzle-zod/utils").Json | undefined;
    preMedications?: import("drizzle-zod/utils").Json | undefined;
    postMedications?: import("drizzle-zod/utils").Json | undefined;
    supportiveCare?: import("drizzle-zod/utils").Json | undefined;
    rescueAgents?: import("drizzle-zod/utils").Json | undefined;
    monitoring?: import("drizzle-zod/utils").Json | undefined;
    toxicityMonitoring?: import("drizzle-zod/utils").Json | undefined;
    interactions?: import("drizzle-zod/utils").Json | undefined;
    updatedBy?: string | null | undefined;
    lastReviewed?: Date | null | undefined;
}, {
    version: string;
    code: string;
    tumourGroup: string;
    treatmentIntent: string;
    summary: string;
    eligibility: import("drizzle-zod/utils").Json;
    precautions: import("drizzle-zod/utils").Json;
    treatment: import("drizzle-zod/utils").Json;
    status?: string | null | undefined;
    contraindications?: import("drizzle-zod/utils").Json | undefined;
    createdBy?: string | null | undefined;
    tumourSupergroup?: string | null | undefined;
    tests?: import("drizzle-zod/utils").Json | undefined;
    doseModifications?: import("drizzle-zod/utils").Json | undefined;
    referenceList?: import("drizzle-zod/utils").Json | undefined;
    cycleInfo?: import("drizzle-zod/utils").Json | undefined;
    preMedications?: import("drizzle-zod/utils").Json | undefined;
    postMedications?: import("drizzle-zod/utils").Json | undefined;
    supportiveCare?: import("drizzle-zod/utils").Json | undefined;
    rescueAgents?: import("drizzle-zod/utils").Json | undefined;
    monitoring?: import("drizzle-zod/utils").Json | undefined;
    toxicityMonitoring?: import("drizzle-zod/utils").Json | undefined;
    interactions?: import("drizzle-zod/utils").Json | undefined;
    updatedBy?: string | null | undefined;
    lastReviewed?: Date | null | undefined;
}>;
export declare const insertOncologyMedicationSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    name: z.ZodString;
    brandNames: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    classification: z.ZodString;
    mechanism: z.ZodString;
    administration: z.ZodString;
    indications: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    dosing: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    sideEffects: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    monitoring: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    interactions: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    referenceSources: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    summary: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    blackBoxWarning: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    specialConsiderations: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    pharmacokinetics: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    contraindications: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    routineMonitoring: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    preTreatmentTests: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    isChemotherapy: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isImmunotherapy: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isTargetedTherapy: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isOrphanDrug: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    name: string;
    indications: import("drizzle-zod/utils").Json;
    classification: string;
    mechanism: string;
    administration: string;
    dosing: import("drizzle-zod/utils").Json;
    contraindications?: import("drizzle-zod/utils").Json | undefined;
    summary?: string | null | undefined;
    monitoring?: import("drizzle-zod/utils").Json | undefined;
    interactions?: import("drizzle-zod/utils").Json | undefined;
    brandNames?: import("drizzle-zod/utils").Json | undefined;
    sideEffects?: import("drizzle-zod/utils").Json | undefined;
    referenceSources?: import("drizzle-zod/utils").Json | undefined;
    blackBoxWarning?: string | null | undefined;
    specialConsiderations?: import("drizzle-zod/utils").Json | undefined;
    pharmacokinetics?: import("drizzle-zod/utils").Json | undefined;
    routineMonitoring?: import("drizzle-zod/utils").Json | undefined;
    preTreatmentTests?: import("drizzle-zod/utils").Json | undefined;
    isChemotherapy?: boolean | null | undefined;
    isImmunotherapy?: boolean | null | undefined;
    isTargetedTherapy?: boolean | null | undefined;
    isOrphanDrug?: boolean | null | undefined;
}, {
    name: string;
    indications: import("drizzle-zod/utils").Json;
    classification: string;
    mechanism: string;
    administration: string;
    dosing: import("drizzle-zod/utils").Json;
    contraindications?: import("drizzle-zod/utils").Json | undefined;
    summary?: string | null | undefined;
    monitoring?: import("drizzle-zod/utils").Json | undefined;
    interactions?: import("drizzle-zod/utils").Json | undefined;
    brandNames?: import("drizzle-zod/utils").Json | undefined;
    sideEffects?: import("drizzle-zod/utils").Json | undefined;
    referenceSources?: import("drizzle-zod/utils").Json | undefined;
    blackBoxWarning?: string | null | undefined;
    specialConsiderations?: import("drizzle-zod/utils").Json | undefined;
    pharmacokinetics?: import("drizzle-zod/utils").Json | undefined;
    routineMonitoring?: import("drizzle-zod/utils").Json | undefined;
    preTreatmentTests?: import("drizzle-zod/utils").Json | undefined;
    isChemotherapy?: boolean | null | undefined;
    isImmunotherapy?: boolean | null | undefined;
    isTargetedTherapy?: boolean | null | undefined;
    isOrphanDrug?: boolean | null | undefined;
}>;
export declare const nccnGuidelines: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "nccn_guidelines";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "nccn_guidelines";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        referenceCode: import("drizzle-orm/pg-core").PgColumn<{
            name: "reference_code";
            tableName: "nccn_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        title: import("drizzle-orm/pg-core").PgColumn<{
            name: "title";
            tableName: "nccn_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 500;
        }>;
        category: import("drizzle-orm/pg-core").PgColumn<{
            name: "category";
            tableName: "nccn_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        cancerType: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_type";
            tableName: "nccn_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        version: import("drizzle-orm/pg-core").PgColumn<{
            name: "version";
            tableName: "nccn_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        releaseDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "release_date";
            tableName: "nccn_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        content: import("drizzle-orm/pg-core").PgColumn<{
            name: "content";
            tableName: "nccn_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "nccn_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        consensusLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "consensus_level";
            tableName: "nccn_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        applicableStages: import("drizzle-orm/pg-core").PgColumn<{
            name: "applicable_stages";
            tableName: "nccn_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        biomarkerRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "biomarker_requirements";
            tableName: "nccn_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        treatmentSettings: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_settings";
            tableName: "nccn_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        specialPopulations: import("drizzle-orm/pg-core").PgColumn<{
            name: "special_populations";
            tableName: "nccn_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        crossReferences: import("drizzle-orm/pg-core").PgColumn<{
            name: "cross_references";
            tableName: "nccn_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        evidenceReferences: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_references";
            tableName: "nccn_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatesFromPrevious: import("drizzle-orm/pg-core").PgColumn<{
            name: "updates_from_previous";
            tableName: "nccn_guidelines";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        clinicalDecisionPoints: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_decision_points";
            tableName: "nccn_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoringRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_requirements";
            tableName: "nccn_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        contraindications: import("drizzle-orm/pg-core").PgColumn<{
            name: "contraindications";
            tableName: "nccn_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        alternativeApproaches: import("drizzle-orm/pg-core").PgColumn<{
            name: "alternative_approaches";
            tableName: "nccn_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        qualityMeasures: import("drizzle-orm/pg-core").PgColumn<{
            name: "quality_measures";
            tableName: "nccn_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "nccn_guidelines";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "nccn_guidelines";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const clinicalDecisionSupport: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "clinical_decision_support";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "clinical_decision_support";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        moduleType: import("drizzle-orm/pg-core").PgColumn<{
            name: "module_type";
            tableName: "clinical_decision_support";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        clinicalScenario: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_scenario";
            tableName: "clinical_decision_support";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 500;
        }>;
        inputParameters: import("drizzle-orm/pg-core").PgColumn<{
            name: "input_parameters";
            tableName: "clinical_decision_support";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReferences: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_references";
            tableName: "clinical_decision_support";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        recommendedActions: import("drizzle-orm/pg-core").PgColumn<{
            name: "recommended_actions";
            tableName: "clinical_decision_support";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        alternativeOptions: import("drizzle-orm/pg-core").PgColumn<{
            name: "alternative_options";
            tableName: "clinical_decision_support";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        riskStratification: import("drizzle-orm/pg-core").PgColumn<{
            name: "risk_stratification";
            tableName: "clinical_decision_support";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        evidenceStrength: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_strength";
            tableName: "clinical_decision_support";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        consensusLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "consensus_level";
            tableName: "clinical_decision_support";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        applicabilityScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "applicability_score";
            tableName: "clinical_decision_support";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        lastReviewed: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_reviewed";
            tableName: "clinical_decision_support";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "clinical_decision_support";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "clinical_decision_support";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const biomarkerGuidelines: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "biomarker_guidelines";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "biomarker_guidelines";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        biomarkerName: import("drizzle-orm/pg-core").PgColumn<{
            name: "biomarker_name";
            tableName: "biomarker_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        testingMethod: import("drizzle-orm/pg-core").PgColumn<{
            name: "testing_method";
            tableName: "biomarker_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 200;
        }>;
        cancerType: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_type";
            tableName: "biomarker_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        clinicalIndications: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_indications";
            tableName: "biomarker_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "biomarker_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "biomarker_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        testingTiming: import("drizzle-orm/pg-core").PgColumn<{
            name: "testing_timing";
            tableName: "biomarker_guidelines";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 200;
        }>;
        interpretationCriteria: import("drizzle-orm/pg-core").PgColumn<{
            name: "interpretation_criteria";
            tableName: "biomarker_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        therapeuticImplications: import("drizzle-orm/pg-core").PgColumn<{
            name: "therapeutic_implications";
            tableName: "biomarker_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        qualityRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "quality_requirements";
            tableName: "biomarker_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        reportingStandards: import("drizzle-orm/pg-core").PgColumn<{
            name: "reporting_standards";
            tableName: "biomarker_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        costConsiderations: import("drizzle-orm/pg-core").PgColumn<{
            name: "cost_considerations";
            tableName: "biomarker_guidelines";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        specialConsiderations: import("drizzle-orm/pg-core").PgColumn<{
            name: "special_considerations";
            tableName: "biomarker_guidelines";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "biomarker_guidelines";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "biomarker_guidelines";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const insertNccnGuidelinesSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    referenceCode: z.ZodString;
    title: z.ZodString;
    category: z.ZodString;
    cancerType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    version: z.ZodOptional<z.ZodString>;
    releaseDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    content: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    evidenceLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    consensusLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    applicableStages: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    biomarkerRequirements: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    treatmentSettings: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    specialPopulations: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    crossReferences: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    evidenceReferences: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    updatesFromPrevious: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    clinicalDecisionPoints: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    monitoringRequirements: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    contraindications: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    alternativeApproaches: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    qualityMeasures: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    category: string;
    title: string;
    content: import("drizzle-zod/utils").Json;
    referenceCode: string;
    version?: string | undefined;
    contraindications?: import("drizzle-zod/utils").Json | undefined;
    cancerType?: string | null | undefined;
    evidenceLevel?: string | null | undefined;
    evidenceReferences?: import("drizzle-zod/utils").Json | undefined;
    monitoringRequirements?: import("drizzle-zod/utils").Json | undefined;
    releaseDate?: string | null | undefined;
    consensusLevel?: string | null | undefined;
    applicableStages?: import("drizzle-zod/utils").Json | undefined;
    biomarkerRequirements?: import("drizzle-zod/utils").Json | undefined;
    treatmentSettings?: import("drizzle-zod/utils").Json | undefined;
    specialPopulations?: import("drizzle-zod/utils").Json | undefined;
    crossReferences?: import("drizzle-zod/utils").Json | undefined;
    updatesFromPrevious?: string | null | undefined;
    clinicalDecisionPoints?: import("drizzle-zod/utils").Json | undefined;
    alternativeApproaches?: import("drizzle-zod/utils").Json | undefined;
    qualityMeasures?: import("drizzle-zod/utils").Json | undefined;
}, {
    category: string;
    title: string;
    content: import("drizzle-zod/utils").Json;
    referenceCode: string;
    version?: string | undefined;
    contraindications?: import("drizzle-zod/utils").Json | undefined;
    cancerType?: string | null | undefined;
    evidenceLevel?: string | null | undefined;
    evidenceReferences?: import("drizzle-zod/utils").Json | undefined;
    monitoringRequirements?: import("drizzle-zod/utils").Json | undefined;
    releaseDate?: string | null | undefined;
    consensusLevel?: string | null | undefined;
    applicableStages?: import("drizzle-zod/utils").Json | undefined;
    biomarkerRequirements?: import("drizzle-zod/utils").Json | undefined;
    treatmentSettings?: import("drizzle-zod/utils").Json | undefined;
    specialPopulations?: import("drizzle-zod/utils").Json | undefined;
    crossReferences?: import("drizzle-zod/utils").Json | undefined;
    updatesFromPrevious?: string | null | undefined;
    clinicalDecisionPoints?: import("drizzle-zod/utils").Json | undefined;
    alternativeApproaches?: import("drizzle-zod/utils").Json | undefined;
    qualityMeasures?: import("drizzle-zod/utils").Json | undefined;
}>;
export declare const insertClinicalDecisionSupportSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    moduleType: z.ZodString;
    clinicalScenario: z.ZodString;
    inputParameters: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    nccnReferences: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    recommendedActions: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    alternativeOptions: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    riskStratification: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    evidenceStrength: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    consensusLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    applicabilityScore: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    lastReviewed: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    moduleType: string;
    clinicalScenario: string;
    inputParameters: import("drizzle-zod/utils").Json;
    nccnReferences: import("drizzle-zod/utils").Json;
    recommendedActions: import("drizzle-zod/utils").Json;
    lastReviewed?: Date | null | undefined;
    consensusLevel?: string | null | undefined;
    alternativeOptions?: import("drizzle-zod/utils").Json | undefined;
    riskStratification?: string | null | undefined;
    evidenceStrength?: string | null | undefined;
    applicabilityScore?: string | null | undefined;
}, {
    moduleType: string;
    clinicalScenario: string;
    inputParameters: import("drizzle-zod/utils").Json;
    nccnReferences: import("drizzle-zod/utils").Json;
    recommendedActions: import("drizzle-zod/utils").Json;
    lastReviewed?: Date | null | undefined;
    consensusLevel?: string | null | undefined;
    alternativeOptions?: import("drizzle-zod/utils").Json | undefined;
    riskStratification?: string | null | undefined;
    evidenceStrength?: string | null | undefined;
    applicabilityScore?: string | null | undefined;
}>;
export declare const insertBiomarkerGuidelinesSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    biomarkerName: z.ZodString;
    testingMethod: z.ZodString;
    cancerType: z.ZodString;
    clinicalIndications: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    nccnReference: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    evidenceLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    testingTiming: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    interpretationCriteria: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    therapeuticImplications: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    qualityRequirements: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    reportingStandards: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    costConsiderations: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    specialConsiderations: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    cancerType: string;
    biomarkerName: string;
    testingMethod: string;
    clinicalIndications: import("drizzle-zod/utils").Json;
    evidenceLevel?: string | null | undefined;
    specialConsiderations?: import("drizzle-zod/utils").Json | undefined;
    nccnReference?: string | null | undefined;
    testingTiming?: string | null | undefined;
    interpretationCriteria?: import("drizzle-zod/utils").Json | undefined;
    therapeuticImplications?: import("drizzle-zod/utils").Json | undefined;
    qualityRequirements?: import("drizzle-zod/utils").Json | undefined;
    reportingStandards?: import("drizzle-zod/utils").Json | undefined;
    costConsiderations?: string | null | undefined;
}, {
    cancerType: string;
    biomarkerName: string;
    testingMethod: string;
    clinicalIndications: import("drizzle-zod/utils").Json;
    evidenceLevel?: string | null | undefined;
    specialConsiderations?: import("drizzle-zod/utils").Json | undefined;
    nccnReference?: string | null | undefined;
    testingTiming?: string | null | undefined;
    interpretationCriteria?: import("drizzle-zod/utils").Json | undefined;
    therapeuticImplications?: import("drizzle-zod/utils").Json | undefined;
    qualityRequirements?: import("drizzle-zod/utils").Json | undefined;
    reportingStandards?: import("drizzle-zod/utils").Json | undefined;
    costConsiderations?: string | null | undefined;
}>;
export declare const treatmentPlanCriteria: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "treatment_plan_criteria";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "treatment_plan_criteria";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        category: import("drizzle-orm/pg-core").PgColumn<{
            name: "category";
            tableName: "treatment_plan_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        value: import("drizzle-orm/pg-core").PgColumn<{
            name: "value";
            tableName: "treatment_plan_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        description: import("drizzle-orm/pg-core").PgColumn<{
            name: "description";
            tableName: "treatment_plan_criteria";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isCommon: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_common";
            tableName: "treatment_plan_criteria";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sortOrder: import("drizzle-orm/pg-core").PgColumn<{
            name: "sort_order";
            tableName: "treatment_plan_criteria";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "treatment_plan_criteria";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "treatment_plan_criteria";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        cancerSpecific: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_specific";
            tableName: "treatment_plan_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        clinicalContext: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_context";
            tableName: "treatment_plan_criteria";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        cutoffValue: import("drizzle-orm/pg-core").PgColumn<{
            name: "cutoff_value";
            tableName: "treatment_plan_criteria";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        parentCategory: import("drizzle-orm/pg-core").PgColumn<{
            name: "parent_category";
            tableName: "treatment_plan_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "treatment_plan_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
    };
    dialect: "pg";
}>;
export declare const treatmentPlanMappings: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "treatment_plan_mappings";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        cancerType: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_type";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        histology: import("drizzle-orm/pg-core").PgColumn<{
            name: "histology";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        biomarkers: import("drizzle-orm/pg-core").PgColumn<{
            name: "biomarkers";
            tableName: "treatment_plan_mappings";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        treatmentIntent: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_intent";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        lineOfTreatment: import("drizzle-orm/pg-core").PgColumn<{
            name: "line_of_treatment";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        treatmentProtocol: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_protocol";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        evidenceReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_reference";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        conflictingBiomarkers: import("drizzle-orm/pg-core").PgColumn<{
            name: "conflicting_biomarkers";
            tableName: "treatment_plan_mappings";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        requiredStage: import("drizzle-orm/pg-core").PgColumn<{
            name: "required_stage";
            tableName: "treatment_plan_mappings";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        confidenceScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "confidence_score";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "treatment_plan_mappings";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "treatment_plan_mappings";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "treatment_plan_mappings";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        requiresCombinationMatch: import("drizzle-orm/pg-core").PgColumn<{
            name: "requires_combination_match";
            tableName: "treatment_plan_mappings";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        toxicityLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "toxicity_level";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        priorityTag: import("drizzle-orm/pg-core").PgColumn<{
            name: "priority_tag";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        performanceStatusMin: import("drizzle-orm/pg-core").PgColumn<{
            name: "performance_status_min";
            tableName: "treatment_plan_mappings";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        performanceStatusMax: import("drizzle-orm/pg-core").PgColumn<{
            name: "performance_status_max";
            tableName: "treatment_plan_mappings";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        comorbidityExclusions: import("drizzle-orm/pg-core").PgColumn<{
            name: "comorbidity_exclusions";
            tableName: "treatment_plan_mappings";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        requiredLabValues: import("drizzle-orm/pg-core").PgColumn<{
            name: "required_lab_values";
            tableName: "treatment_plan_mappings";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        drugInteractions: import("drizzle-orm/pg-core").PgColumn<{
            name: "drug_interactions";
            tableName: "treatment_plan_mappings";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoringRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_requirements";
            tableName: "treatment_plan_mappings";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        doseModifications: import("drizzle-orm/pg-core").PgColumn<{
            name: "dose_modifications";
            tableName: "treatment_plan_mappings";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        specialConsiderations: import("drizzle-orm/pg-core").PgColumn<{
            name: "special_considerations";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        alternativeOptions: import("drizzle-orm/pg-core").PgColumn<{
            name: "alternative_options";
            tableName: "treatment_plan_mappings";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        costTier: import("drizzle-orm/pg-core").PgColumn<{
            name: "cost_tier";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        availabilityStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "availability_status";
            tableName: "treatment_plan_mappings";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
    };
    dialect: "pg";
}>;
export declare const drugInteractions: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "drug_interactions";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "drug_interactions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        drug1: import("drizzle-orm/pg-core").PgColumn<{
            name: "drug1";
            tableName: "drug_interactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        drug2: import("drizzle-orm/pg-core").PgColumn<{
            name: "drug2";
            tableName: "drug_interactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        interactionType: import("drizzle-orm/pg-core").PgColumn<{
            name: "interaction_type";
            tableName: "drug_interactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        mechanism: import("drizzle-orm/pg-core").PgColumn<{
            name: "mechanism";
            tableName: "drug_interactions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        clinicalEffect: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_effect";
            tableName: "drug_interactions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        management: import("drizzle-orm/pg-core").PgColumn<{
            name: "management";
            tableName: "drug_interactions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "drug_interactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        severity: import("drizzle-orm/pg-core").PgColumn<{
            name: "severity";
            tableName: "drug_interactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        onset: import("drizzle-orm/pg-core").PgColumn<{
            name: "onset";
            tableName: "drug_interactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        documentation: import("drizzle-orm/pg-core").PgColumn<{
            name: "documentation";
            tableName: "drug_interactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "drug_interactions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "drug_interactions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const comorbidityAssessment: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "comorbidity_assessment";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "comorbidity_assessment";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        comorbidityName: import("drizzle-orm/pg-core").PgColumn<{
            name: "comorbidity_name";
            tableName: "comorbidity_assessment";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        category: import("drizzle-orm/pg-core").PgColumn<{
            name: "category";
            tableName: "comorbidity_assessment";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        severity: import("drizzle-orm/pg-core").PgColumn<{
            name: "severity";
            tableName: "comorbidity_assessment";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        treatmentImpact: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_impact";
            tableName: "comorbidity_assessment";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        contraindicatedDrugs: import("drizzle-orm/pg-core").PgColumn<{
            name: "contraindicated_drugs";
            tableName: "comorbidity_assessment";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        dosageAdjustments: import("drizzle-orm/pg-core").PgColumn<{
            name: "dosage_adjustments";
            tableName: "comorbidity_assessment";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoringRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_requirements";
            tableName: "comorbidity_assessment";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        specialConsiderations: import("drizzle-orm/pg-core").PgColumn<{
            name: "special_considerations";
            tableName: "comorbidity_assessment";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "comorbidity_assessment";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "comorbidity_assessment";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "comorbidity_assessment";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "comorbidity_assessment";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const performanceStatusCriteria: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "performance_status_criteria";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "performance_status_criteria";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        scaleType: import("drizzle-orm/pg-core").PgColumn<{
            name: "scale_type";
            tableName: "performance_status_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        scaleValue: import("drizzle-orm/pg-core").PgColumn<{
            name: "scale_value";
            tableName: "performance_status_criteria";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        description: import("drizzle-orm/pg-core").PgColumn<{
            name: "description";
            tableName: "performance_status_criteria";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        functionalCapacity: import("drizzle-orm/pg-core").PgColumn<{
            name: "functional_capacity";
            tableName: "performance_status_criteria";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        treatmentEligibility: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_eligibility";
            tableName: "performance_status_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        prognosticSignificance: import("drizzle-orm/pg-core").PgColumn<{
            name: "prognostic_significance";
            tableName: "performance_status_criteria";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        assessmentGuidelines: import("drizzle-orm/pg-core").PgColumn<{
            name: "assessment_guidelines";
            tableName: "performance_status_criteria";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "performance_status_criteria";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "performance_status_criteria";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const educationalTopics: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "educational_topics";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "educational_topics";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        title: import("drizzle-orm/pg-core").PgColumn<{
            name: "title";
            tableName: "educational_topics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 500;
        }>;
        description: import("drizzle-orm/pg-core").PgColumn<{
            name: "description";
            tableName: "educational_topics";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        content: import("drizzle-orm/pg-core").PgColumn<{
            name: "content";
            tableName: "educational_topics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        difficulty: import("drizzle-orm/pg-core").PgColumn<{
            name: "difficulty";
            tableName: "educational_topics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        subspecialty: import("drizzle-orm/pg-core").PgColumn<{
            name: "subspecialty";
            tableName: "educational_topics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        organSite: import("drizzle-orm/pg-core").PgColumn<{
            name: "organ_site";
            tableName: "educational_topics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        topicTags: import("drizzle-orm/pg-core").PgColumn<{
            name: "topic_tags";
            tableName: "educational_topics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        learningObjectives: import("drizzle-orm/pg-core").PgColumn<{
            name: "learning_objectives";
            tableName: "educational_topics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        keyPoints: import("drizzle-orm/pg-core").PgColumn<{
            name: "key_points";
            tableName: "educational_topics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        clinicalApplications: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_applications";
            tableName: "educational_topics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        evidenceReferences: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_references";
            tableName: "educational_topics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        estimatedReadTime: import("drizzle-orm/pg-core").PgColumn<{
            name: "estimated_read_time";
            tableName: "educational_topics";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        examRelevance: import("drizzle-orm/pg-core").PgColumn<{
            name: "exam_relevance";
            tableName: "educational_topics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        prerequisites: import("drizzle-orm/pg-core").PgColumn<{
            name: "prerequisites";
            tableName: "educational_topics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "educational_topics";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "educational_topics";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "educational_topics";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const clinicalScenarios: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "clinical_scenarios";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "clinical_scenarios";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        title: import("drizzle-orm/pg-core").PgColumn<{
            name: "title";
            tableName: "clinical_scenarios";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 500;
        }>;
        description: import("drizzle-orm/pg-core").PgColumn<{
            name: "description";
            tableName: "clinical_scenarios";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        patientPresentation: import("drizzle-orm/pg-core").PgColumn<{
            name: "patient_presentation";
            tableName: "clinical_scenarios";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        clinicalContext: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_context";
            tableName: "clinical_scenarios";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        difficulty: import("drizzle-orm/pg-core").PgColumn<{
            name: "difficulty";
            tableName: "clinical_scenarios";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        subspecialty: import("drizzle-orm/pg-core").PgColumn<{
            name: "subspecialty";
            tableName: "clinical_scenarios";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        organSite: import("drizzle-orm/pg-core").PgColumn<{
            name: "organ_site";
            tableName: "clinical_scenarios";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        decisionPoints: import("drizzle-orm/pg-core").PgColumn<{
            name: "decision_points";
            tableName: "clinical_scenarios";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        learningGoals: import("drizzle-orm/pg-core").PgColumn<{
            name: "learning_goals";
            tableName: "clinical_scenarios";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        evidenceBasis: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_basis";
            tableName: "clinical_scenarios";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        estimatedTime: import("drizzle-orm/pg-core").PgColumn<{
            name: "estimated_time";
            tableName: "clinical_scenarios";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "clinical_scenarios";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "clinical_scenarios";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "clinical_scenarios";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const questionBank: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "question_bank";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "question_bank";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        scenarioId: import("drizzle-orm/pg-core").PgColumn<{
            name: "scenario_id";
            tableName: "question_bank";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        questionText: import("drizzle-orm/pg-core").PgColumn<{
            name: "question_text";
            tableName: "question_bank";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        questionType: import("drizzle-orm/pg-core").PgColumn<{
            name: "question_type";
            tableName: "question_bank";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        options: import("drizzle-orm/pg-core").PgColumn<{
            name: "options";
            tableName: "question_bank";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        correctAnswer: import("drizzle-orm/pg-core").PgColumn<{
            name: "correct_answer";
            tableName: "question_bank";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        rationale: import("drizzle-orm/pg-core").PgColumn<{
            name: "rationale";
            tableName: "question_bank";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        clinicalPearls: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_pearls";
            tableName: "question_bank";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        evidenceReferences: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_references";
            tableName: "question_bank";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        difficulty: import("drizzle-orm/pg-core").PgColumn<{
            name: "difficulty";
            tableName: "question_bank";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        subspecialty: import("drizzle-orm/pg-core").PgColumn<{
            name: "subspecialty";
            tableName: "question_bank";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        organSite: import("drizzle-orm/pg-core").PgColumn<{
            name: "organ_site";
            tableName: "question_bank";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "question_bank";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "question_bank";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "question_bank";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const insertEducationalTopicSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    title: z.ZodString;
    description: z.ZodString;
    content: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    difficulty: z.ZodString;
    subspecialty: z.ZodString;
    organSite: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    topicTags: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    learningObjectives: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    keyPoints: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    clinicalApplications: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    evidenceReferences: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    estimatedReadTime: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    examRelevance: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    prerequisites: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    title: string;
    content: import("drizzle-zod/utils").Json;
    description: string;
    difficulty: string;
    subspecialty: string;
    learningObjectives: import("drizzle-zod/utils").Json;
    keyPoints: import("drizzle-zod/utils").Json;
    isActive?: boolean | null | undefined;
    evidenceReferences?: import("drizzle-zod/utils").Json | undefined;
    organSite?: string | null | undefined;
    topicTags?: import("drizzle-zod/utils").Json | undefined;
    clinicalApplications?: import("drizzle-zod/utils").Json | undefined;
    estimatedReadTime?: number | null | undefined;
    examRelevance?: string | null | undefined;
    prerequisites?: import("drizzle-zod/utils").Json | undefined;
}, {
    title: string;
    content: import("drizzle-zod/utils").Json;
    description: string;
    difficulty: string;
    subspecialty: string;
    learningObjectives: import("drizzle-zod/utils").Json;
    keyPoints: import("drizzle-zod/utils").Json;
    isActive?: boolean | null | undefined;
    evidenceReferences?: import("drizzle-zod/utils").Json | undefined;
    organSite?: string | null | undefined;
    topicTags?: import("drizzle-zod/utils").Json | undefined;
    clinicalApplications?: import("drizzle-zod/utils").Json | undefined;
    estimatedReadTime?: number | null | undefined;
    examRelevance?: string | null | undefined;
    prerequisites?: import("drizzle-zod/utils").Json | undefined;
}>;
export declare const insertClinicalScenarioSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    title: z.ZodString;
    description: z.ZodString;
    patientPresentation: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    clinicalContext: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    difficulty: z.ZodString;
    subspecialty: z.ZodString;
    organSite: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    decisionPoints: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    learningGoals: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    evidenceBasis: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    estimatedTime: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    title: string;
    description: string;
    clinicalContext: import("drizzle-zod/utils").Json;
    difficulty: string;
    subspecialty: string;
    patientPresentation: import("drizzle-zod/utils").Json;
    decisionPoints: import("drizzle-zod/utils").Json;
    learningGoals: import("drizzle-zod/utils").Json;
    evidenceBasis: import("drizzle-zod/utils").Json;
    isActive?: boolean | null | undefined;
    organSite?: string | null | undefined;
    estimatedTime?: number | null | undefined;
}, {
    title: string;
    description: string;
    clinicalContext: import("drizzle-zod/utils").Json;
    difficulty: string;
    subspecialty: string;
    patientPresentation: import("drizzle-zod/utils").Json;
    decisionPoints: import("drizzle-zod/utils").Json;
    learningGoals: import("drizzle-zod/utils").Json;
    evidenceBasis: import("drizzle-zod/utils").Json;
    isActive?: boolean | null | undefined;
    organSite?: string | null | undefined;
    estimatedTime?: number | null | undefined;
}>;
export declare const insertQuestionSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    scenarioId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    questionText: z.ZodString;
    questionType: z.ZodString;
    options: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    correctAnswer: z.ZodString;
    rationale: z.ZodString;
    clinicalPearls: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    evidenceReferences: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    difficulty: z.ZodString;
    subspecialty: z.ZodString;
    organSite: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    difficulty: string;
    subspecialty: string;
    questionText: string;
    questionType: string;
    correctAnswer: string;
    rationale: string;
    options?: import("drizzle-zod/utils").Json | undefined;
    isActive?: boolean | null | undefined;
    evidenceReferences?: import("drizzle-zod/utils").Json | undefined;
    organSite?: string | null | undefined;
    scenarioId?: string | null | undefined;
    clinicalPearls?: import("drizzle-zod/utils").Json | undefined;
}, {
    difficulty: string;
    subspecialty: string;
    questionText: string;
    questionType: string;
    correctAnswer: string;
    rationale: string;
    options?: import("drizzle-zod/utils").Json | undefined;
    isActive?: boolean | null | undefined;
    evidenceReferences?: import("drizzle-zod/utils").Json | undefined;
    organSite?: string | null | undefined;
    scenarioId?: string | null | undefined;
    clinicalPearls?: import("drizzle-zod/utils").Json | undefined;
}>;
export declare const admissionCriteria: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "admission_criteria";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "admission_criteria";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        criteriaName: import("drizzle-orm/pg-core").PgColumn<{
            name: "criteria_name";
            tableName: "admission_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        cancerType: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_type";
            tableName: "admission_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        admissionType: import("drizzle-orm/pg-core").PgColumn<{
            name: "admission_type";
            tableName: "admission_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        clinicalIndications: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_indications";
            tableName: "admission_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        exclusionCriteria: import("drizzle-orm/pg-core").PgColumn<{
            name: "exclusion_criteria";
            tableName: "admission_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        riskFactors: import("drizzle-orm/pg-core").PgColumn<{
            name: "risk_factors";
            tableName: "admission_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        requiredAssessments: import("drizzle-orm/pg-core").PgColumn<{
            name: "required_assessments";
            tableName: "admission_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "admission_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "admission_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        priority: import("drizzle-orm/pg-core").PgColumn<{
            name: "priority";
            tableName: "admission_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        estimatedLOS: import("drizzle-orm/pg-core").PgColumn<{
            name: "estimated_los";
            tableName: "admission_criteria";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        specialRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "special_requirements";
            tableName: "admission_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        contraindications: import("drizzle-orm/pg-core").PgColumn<{
            name: "contraindications";
            tableName: "admission_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "admission_criteria";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "admission_criteria";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "admission_criteria";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const emergencyScenarios: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "emergency_scenarios";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "emergency_scenarios";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        scenarioName: import("drizzle-orm/pg-core").PgColumn<{
            name: "scenario_name";
            tableName: "emergency_scenarios";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        severity: import("drizzle-orm/pg-core").PgColumn<{
            name: "severity";
            tableName: "emergency_scenarios";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        cancerType: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_type";
            tableName: "emergency_scenarios";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        treatmentRelated: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_related";
            tableName: "emergency_scenarios";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        clinicalPresentation: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_presentation";
            tableName: "emergency_scenarios";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        diagnosticCriteria: import("drizzle-orm/pg-core").PgColumn<{
            name: "diagnostic_criteria";
            tableName: "emergency_scenarios";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        riskFactors: import("drizzle-orm/pg-core").PgColumn<{
            name: "risk_factors";
            tableName: "emergency_scenarios";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        immediateActions: import("drizzle-orm/pg-core").PgColumn<{
            name: "immediate_actions";
            tableName: "emergency_scenarios";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        timeToIntervention: import("drizzle-orm/pg-core").PgColumn<{
            name: "time_to_intervention";
            tableName: "emergency_scenarios";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        requiredResources: import("drizzle-orm/pg-core").PgColumn<{
            name: "required_resources";
            tableName: "emergency_scenarios";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        consultationRequired: import("drizzle-orm/pg-core").PgColumn<{
            name: "consultation_required";
            tableName: "emergency_scenarios";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "emergency_scenarios";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "emergency_scenarios";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "emergency_scenarios";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "emergency_scenarios";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "emergency_scenarios";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const emergencyProtocols: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "emergency_protocols";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "emergency_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        scenarioId: import("drizzle-orm/pg-core").PgColumn<{
            name: "scenario_id";
            tableName: "emergency_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        protocolName: import("drizzle-orm/pg-core").PgColumn<{
            name: "protocol_name";
            tableName: "emergency_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        stepNumber: import("drizzle-orm/pg-core").PgColumn<{
            name: "step_number";
            tableName: "emergency_protocols";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        action: import("drizzle-orm/pg-core").PgColumn<{
            name: "action";
            tableName: "emergency_protocols";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        timeFrame: import("drizzle-orm/pg-core").PgColumn<{
            name: "time_frame";
            tableName: "emergency_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        requiredPersonnel: import("drizzle-orm/pg-core").PgColumn<{
            name: "required_personnel";
            tableName: "emergency_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        medications: import("drizzle-orm/pg-core").PgColumn<{
            name: "medications";
            tableName: "emergency_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoring: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring";
            tableName: "emergency_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        expectedOutcome: import("drizzle-orm/pg-core").PgColumn<{
            name: "expected_outcome";
            tableName: "emergency_protocols";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nextStepTrigger: import("drizzle-orm/pg-core").PgColumn<{
            name: "next_step_trigger";
            tableName: "emergency_protocols";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        alternativeActions: import("drizzle-orm/pg-core").PgColumn<{
            name: "alternative_actions";
            tableName: "emergency_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "emergency_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "emergency_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const antibioticProtocols: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "antibiotic_protocols";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "antibiotic_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        protocolName: import("drizzle-orm/pg-core").PgColumn<{
            name: "protocol_name";
            tableName: "antibiotic_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        indication: import("drizzle-orm/pg-core").PgColumn<{
            name: "indication";
            tableName: "antibiotic_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        patientPopulation: import("drizzle-orm/pg-core").PgColumn<{
            name: "patient_population";
            tableName: "antibiotic_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 200;
        }>;
        neutropeniaGrade: import("drizzle-orm/pg-core").PgColumn<{
            name: "neutropenia_grade";
            tableName: "antibiotic_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        empiricTherapy: import("drizzle-orm/pg-core").PgColumn<{
            name: "empiric_therapy";
            tableName: "antibiotic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        targetedTherapy: import("drizzle-orm/pg-core").PgColumn<{
            name: "targeted_therapy";
            tableName: "antibiotic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        duration: import("drizzle-orm/pg-core").PgColumn<{
            name: "duration";
            tableName: "antibiotic_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        monitoringParameters: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_parameters";
            tableName: "antibiotic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        adjustmentCriteria: import("drizzle-orm/pg-core").PgColumn<{
            name: "adjustment_criteria";
            tableName: "antibiotic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        discontinuationCriteria: import("drizzle-orm/pg-core").PgColumn<{
            name: "discontinuation_criteria";
            tableName: "antibiotic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sideEffects: import("drizzle-orm/pg-core").PgColumn<{
            name: "side_effects";
            tableName: "antibiotic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        drugInteractions: import("drizzle-orm/pg-core").PgColumn<{
            name: "drug_interactions";
            tableName: "antibiotic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "antibiotic_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "antibiotic_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "antibiotic_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "antibiotic_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "antibiotic_protocols";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const monitoringParameters: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "monitoring_parameters";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "monitoring_parameters";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        parameterName: import("drizzle-orm/pg-core").PgColumn<{
            name: "parameter_name";
            tableName: "monitoring_parameters";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        category: import("drizzle-orm/pg-core").PgColumn<{
            name: "category";
            tableName: "monitoring_parameters";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        cancerType: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_type";
            tableName: "monitoring_parameters";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        treatmentPhase: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_phase";
            tableName: "monitoring_parameters";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        frequency: import("drizzle-orm/pg-core").PgColumn<{
            name: "frequency";
            tableName: "monitoring_parameters";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        normalRange: import("drizzle-orm/pg-core").PgColumn<{
            name: "normal_range";
            tableName: "monitoring_parameters";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        alertThresholds: import("drizzle-orm/pg-core").PgColumn<{
            name: "alert_thresholds";
            tableName: "monitoring_parameters";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        criticalValues: import("drizzle-orm/pg-core").PgColumn<{
            name: "critical_values";
            tableName: "monitoring_parameters";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        actionRequired: import("drizzle-orm/pg-core").PgColumn<{
            name: "action_required";
            tableName: "monitoring_parameters";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        documentationRequired: import("drizzle-orm/pg-core").PgColumn<{
            name: "documentation_required";
            tableName: "monitoring_parameters";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nursingProtocol: import("drizzle-orm/pg-core").PgColumn<{
            name: "nursing_protocol";
            tableName: "monitoring_parameters";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        physicianNotification: import("drizzle-orm/pg-core").PgColumn<{
            name: "physician_notification";
            tableName: "monitoring_parameters";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        equipmentRequired: import("drizzle-orm/pg-core").PgColumn<{
            name: "equipment_required";
            tableName: "monitoring_parameters";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        specialInstructions: import("drizzle-orm/pg-core").PgColumn<{
            name: "special_instructions";
            tableName: "monitoring_parameters";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "monitoring_parameters";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "monitoring_parameters";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "monitoring_parameters";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "monitoring_parameters";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const dailyAssessmentProtocols: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "daily_assessment_protocols";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "daily_assessment_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        protocolName: import("drizzle-orm/pg-core").PgColumn<{
            name: "protocol_name";
            tableName: "daily_assessment_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        cancerType: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_type";
            tableName: "daily_assessment_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        treatmentPhase: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_phase";
            tableName: "daily_assessment_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        dayOfTreatment: import("drizzle-orm/pg-core").PgColumn<{
            name: "day_of_treatment";
            tableName: "daily_assessment_protocols";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        assessmentComponents: import("drizzle-orm/pg-core").PgColumn<{
            name: "assessment_components";
            tableName: "daily_assessment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        requiredVitals: import("drizzle-orm/pg-core").PgColumn<{
            name: "required_vitals";
            tableName: "daily_assessment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        labRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "lab_requirements";
            tableName: "daily_assessment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        symptomAssessment: import("drizzle-orm/pg-core").PgColumn<{
            name: "symptom_assessment";
            tableName: "daily_assessment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        performanceStatusCheck: import("drizzle-orm/pg-core").PgColumn<{
            name: "performance_status_check";
            tableName: "daily_assessment_protocols";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nursingAssessment: import("drizzle-orm/pg-core").PgColumn<{
            name: "nursing_assessment";
            tableName: "daily_assessment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        physicianRounding: import("drizzle-orm/pg-core").PgColumn<{
            name: "physician_rounding";
            tableName: "daily_assessment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        patientEducation: import("drizzle-orm/pg-core").PgColumn<{
            name: "patient_education";
            tableName: "daily_assessment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        familyUpdates: import("drizzle-orm/pg-core").PgColumn<{
            name: "family_updates";
            tableName: "daily_assessment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        dischargePreparation: import("drizzle-orm/pg-core").PgColumn<{
            name: "discharge_preparation";
            tableName: "daily_assessment_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "daily_assessment_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "daily_assessment_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "daily_assessment_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "daily_assessment_protocols";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const performanceStatusScales: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "performance_status_scales";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "performance_status_scales";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        scaleName: import("drizzle-orm/pg-core").PgColumn<{
            name: "scale_name";
            tableName: "performance_status_scales";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        scaleType: import("drizzle-orm/pg-core").PgColumn<{
            name: "scale_type";
            tableName: "performance_status_scales";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        scoreValue: import("drizzle-orm/pg-core").PgColumn<{
            name: "score_value";
            tableName: "performance_status_scales";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        description: import("drizzle-orm/pg-core").PgColumn<{
            name: "description";
            tableName: "performance_status_scales";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        functionalCapacity: import("drizzle-orm/pg-core").PgColumn<{
            name: "functional_capacity";
            tableName: "performance_status_scales";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        activityLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "activity_level";
            tableName: "performance_status_scales";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        careRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "care_requirements";
            tableName: "performance_status_scales";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        prognosticImplication: import("drizzle-orm/pg-core").PgColumn<{
            name: "prognostic_implication";
            tableName: "performance_status_scales";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        treatmentImplications: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_implications";
            tableName: "performance_status_scales";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoringFrequency: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_frequency";
            tableName: "performance_status_scales";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "performance_status_scales";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "performance_status_scales";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const adverseEvents: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "adverse_events";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "adverse_events";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        eventName: import("drizzle-orm/pg-core").PgColumn<{
            name: "event_name";
            tableName: "adverse_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        category: import("drizzle-orm/pg-core").PgColumn<{
            name: "category";
            tableName: "adverse_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        ctcaeCode: import("drizzle-orm/pg-core").PgColumn<{
            name: "ctcae_code";
            tableName: "adverse_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        ctcaeVersion: import("drizzle-orm/pg-core").PgColumn<{
            name: "ctcae_version";
            tableName: "adverse_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 20;
        }>;
        grade: import("drizzle-orm/pg-core").PgColumn<{
            name: "grade";
            tableName: "adverse_events";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        description: import("drizzle-orm/pg-core").PgColumn<{
            name: "description";
            tableName: "adverse_events";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        clinicalPresentation: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_presentation";
            tableName: "adverse_events";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        riskFactors: import("drizzle-orm/pg-core").PgColumn<{
            name: "risk_factors";
            tableName: "adverse_events";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        associatedTreatments: import("drizzle-orm/pg-core").PgColumn<{
            name: "associated_treatments";
            tableName: "adverse_events";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        timeToOnset: import("drizzle-orm/pg-core").PgColumn<{
            name: "time_to_onset";
            tableName: "adverse_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        duration: import("drizzle-orm/pg-core").PgColumn<{
            name: "duration";
            tableName: "adverse_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        reversibility: import("drizzle-orm/pg-core").PgColumn<{
            name: "reversibility";
            tableName: "adverse_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        frequency: import("drizzle-orm/pg-core").PgColumn<{
            name: "frequency";
            tableName: "adverse_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        preventionStrategies: import("drizzle-orm/pg-core").PgColumn<{
            name: "prevention_strategies";
            tableName: "adverse_events";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "adverse_events";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "adverse_events";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const adverseEventManagement: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "adverse_event_management";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "adverse_event_management";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        adverseEventId: import("drizzle-orm/pg-core").PgColumn<{
            name: "adverse_event_id";
            tableName: "adverse_event_management";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        grade: import("drizzle-orm/pg-core").PgColumn<{
            name: "grade";
            tableName: "adverse_event_management";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        immediateActions: import("drizzle-orm/pg-core").PgColumn<{
            name: "immediate_actions";
            tableName: "adverse_event_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        treatmentModifications: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_modifications";
            tableName: "adverse_event_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        supportiveCare: import("drizzle-orm/pg-core").PgColumn<{
            name: "supportive_care";
            tableName: "adverse_event_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        medications: import("drizzle-orm/pg-core").PgColumn<{
            name: "medications";
            tableName: "adverse_event_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoringRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_requirements";
            tableName: "adverse_event_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        consultationRequired: import("drizzle-orm/pg-core").PgColumn<{
            name: "consultation_required";
            tableName: "adverse_event_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        patientEducation: import("drizzle-orm/pg-core").PgColumn<{
            name: "patient_education";
            tableName: "adverse_event_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        followUpProtocol: import("drizzle-orm/pg-core").PgColumn<{
            name: "follow_up_protocol";
            tableName: "adverse_event_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        rechallengeCriteria: import("drizzle-orm/pg-core").PgColumn<{
            name: "rechallenge_criteria";
            tableName: "adverse_event_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        reportingRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "reporting_requirements";
            tableName: "adverse_event_management";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "adverse_event_management";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "adverse_event_management";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "adverse_event_management";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "adverse_event_management";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const drugToxicityProfiles: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "drug_toxicity_profiles";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "drug_toxicity_profiles";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        drugName: import("drizzle-orm/pg-core").PgColumn<{
            name: "drug_name";
            tableName: "drug_toxicity_profiles";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        genericName: import("drizzle-orm/pg-core").PgColumn<{
            name: "generic_name";
            tableName: "drug_toxicity_profiles";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        drugClass: import("drizzle-orm/pg-core").PgColumn<{
            name: "drug_class";
            tableName: "drug_toxicity_profiles";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        commonToxicities: import("drizzle-orm/pg-core").PgColumn<{
            name: "common_toxicities";
            tableName: "drug_toxicity_profiles";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        rareToxicities: import("drizzle-orm/pg-core").PgColumn<{
            name: "rare_toxicities";
            tableName: "drug_toxicity_profiles";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        doseRelatedToxicities: import("drizzle-orm/pg-core").PgColumn<{
            name: "dose_related_toxicities";
            tableName: "drug_toxicity_profiles";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        cumulativeToxicities: import("drizzle-orm/pg-core").PgColumn<{
            name: "cumulative_toxicities";
            tableName: "drug_toxicity_profiles";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        organSpecificToxicities: import("drizzle-orm/pg-core").PgColumn<{
            name: "organ_specific_toxicities";
            tableName: "drug_toxicity_profiles";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoringSchedule: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_schedule";
            tableName: "drug_toxicity_profiles";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        baselineAssessments: import("drizzle-orm/pg-core").PgColumn<{
            name: "baseline_assessments";
            tableName: "drug_toxicity_profiles";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        warningBoxes: import("drizzle-orm/pg-core").PgColumn<{
            name: "warning_boxes";
            tableName: "drug_toxicity_profiles";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        contraindications: import("drizzle-orm/pg-core").PgColumn<{
            name: "contraindications";
            tableName: "drug_toxicity_profiles";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        drugInteractions: import("drizzle-orm/pg-core").PgColumn<{
            name: "drug_interactions";
            tableName: "drug_toxicity_profiles";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        specialPopulations: import("drizzle-orm/pg-core").PgColumn<{
            name: "special_populations";
            tableName: "drug_toxicity_profiles";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        pregnancyCategory: import("drizzle-orm/pg-core").PgColumn<{
            name: "pregnancy_category";
            tableName: "drug_toxicity_profiles";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 10;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "drug_toxicity_profiles";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "drug_toxicity_profiles";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const supportiveCareProtocols: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "supportive_care_protocols";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "supportive_care_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        protocolName: import("drizzle-orm/pg-core").PgColumn<{
            name: "protocol_name";
            tableName: "supportive_care_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        category: import("drizzle-orm/pg-core").PgColumn<{
            name: "category";
            tableName: "supportive_care_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        indication: import("drizzle-orm/pg-core").PgColumn<{
            name: "indication";
            tableName: "supportive_care_protocols";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        cancerType: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_type";
            tableName: "supportive_care_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        treatmentPhase: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_phase";
            tableName: "supportive_care_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        patientPopulation: import("drizzle-orm/pg-core").PgColumn<{
            name: "patient_population";
            tableName: "supportive_care_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 200;
        }>;
        interventions: import("drizzle-orm/pg-core").PgColumn<{
            name: "interventions";
            tableName: "supportive_care_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        medications: import("drizzle-orm/pg-core").PgColumn<{
            name: "medications";
            tableName: "supportive_care_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nonPharmacological: import("drizzle-orm/pg-core").PgColumn<{
            name: "non_pharmacological";
            tableName: "supportive_care_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoringProtocol: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_protocol";
            tableName: "supportive_care_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        expectedOutcomes: import("drizzle-orm/pg-core").PgColumn<{
            name: "expected_outcomes";
            tableName: "supportive_care_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        adjustmentCriteria: import("drizzle-orm/pg-core").PgColumn<{
            name: "adjustment_criteria";
            tableName: "supportive_care_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        escalationCriteria: import("drizzle-orm/pg-core").PgColumn<{
            name: "escalation_criteria";
            tableName: "supportive_care_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        consultationTriggers: import("drizzle-orm/pg-core").PgColumn<{
            name: "consultation_triggers";
            tableName: "supportive_care_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        patientEducation: import("drizzle-orm/pg-core").PgColumn<{
            name: "patient_education";
            tableName: "supportive_care_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        caregiverInstructions: import("drizzle-orm/pg-core").PgColumn<{
            name: "caregiver_instructions";
            tableName: "supportive_care_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        qualityOfLifeConsiderations: import("drizzle-orm/pg-core").PgColumn<{
            name: "quality_of_life_considerations";
            tableName: "supportive_care_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "supportive_care_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "supportive_care_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "supportive_care_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "supportive_care_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "supportive_care_protocols";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const antiemeticProtocols: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "antiemetic_protocols";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "antiemetic_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        protocolName: import("drizzle-orm/pg-core").PgColumn<{
            name: "protocol_name";
            tableName: "antiemetic_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        emetogenicRisk: import("drizzle-orm/pg-core").PgColumn<{
            name: "emetogenic_risk";
            tableName: "antiemetic_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        treatmentRegimen: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_regimen";
            tableName: "antiemetic_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        dayOfCycle: import("drizzle-orm/pg-core").PgColumn<{
            name: "day_of_cycle";
            tableName: "antiemetic_protocols";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        premedications: import("drizzle-orm/pg-core").PgColumn<{
            name: "premedications";
            tableName: "antiemetic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        acutePhase: import("drizzle-orm/pg-core").PgColumn<{
            name: "acute_phase";
            tableName: "antiemetic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        delayedPhase: import("drizzle-orm/pg-core").PgColumn<{
            name: "delayed_phase";
            tableName: "antiemetic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        anticipatoryPhase: import("drizzle-orm/pg-core").PgColumn<{
            name: "anticipatory_phase";
            tableName: "antiemetic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        breakthroughMedications: import("drizzle-orm/pg-core").PgColumn<{
            name: "breakthrough_medications";
            tableName: "antiemetic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        contraindications: import("drizzle-orm/pg-core").PgColumn<{
            name: "contraindications";
            tableName: "antiemetic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        drugInteractions: import("drizzle-orm/pg-core").PgColumn<{
            name: "drug_interactions";
            tableName: "antiemetic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sideEffects: import("drizzle-orm/pg-core").PgColumn<{
            name: "side_effects";
            tableName: "antiemetic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoringParameters: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_parameters";
            tableName: "antiemetic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        patientInstructions: import("drizzle-orm/pg-core").PgColumn<{
            name: "patient_instructions";
            tableName: "antiemetic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        efficacyMarkers: import("drizzle-orm/pg-core").PgColumn<{
            name: "efficacy_markers";
            tableName: "antiemetic_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "antiemetic_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "antiemetic_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "antiemetic_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "antiemetic_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "antiemetic_protocols";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const painManagementProtocols: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "pain_management_protocols";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "pain_management_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        protocolName: import("drizzle-orm/pg-core").PgColumn<{
            name: "protocol_name";
            tableName: "pain_management_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        painType: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_type";
            tableName: "pain_management_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        painSeverity: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_severity";
            tableName: "pain_management_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        cancerType: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_type";
            tableName: "pain_management_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        painLocation: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_location";
            tableName: "pain_management_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        painMechanism: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_mechanism";
            tableName: "pain_management_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        assessmentTools: import("drizzle-orm/pg-core").PgColumn<{
            name: "assessment_tools";
            tableName: "pain_management_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        pharmacologicalApproach: import("drizzle-orm/pg-core").PgColumn<{
            name: "pharmacological_approach";
            tableName: "pain_management_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nonPharmacologicalApproach: import("drizzle-orm/pg-core").PgColumn<{
            name: "non_pharmacological_approach";
            tableName: "pain_management_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        interventionalOptions: import("drizzle-orm/pg-core").PgColumn<{
            name: "interventional_options";
            tableName: "pain_management_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        opioidGuidelines: import("drizzle-orm/pg-core").PgColumn<{
            name: "opioid_guidelines";
            tableName: "pain_management_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        adjuvantTherapies: import("drizzle-orm/pg-core").PgColumn<{
            name: "adjuvant_therapies";
            tableName: "pain_management_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sideEffectManagement: import("drizzle-orm/pg-core").PgColumn<{
            name: "side_effect_management";
            tableName: "pain_management_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoringProtocol: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_protocol";
            tableName: "pain_management_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        escalationCriteria: import("drizzle-orm/pg-core").PgColumn<{
            name: "escalation_criteria";
            tableName: "pain_management_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        specialConsiderations: import("drizzle-orm/pg-core").PgColumn<{
            name: "special_considerations";
            tableName: "pain_management_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        patientEducation: import("drizzle-orm/pg-core").PgColumn<{
            name: "patient_education";
            tableName: "pain_management_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        caregiverEducation: import("drizzle-orm/pg-core").PgColumn<{
            name: "caregiver_education";
            tableName: "pain_management_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "pain_management_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "pain_management_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "pain_management_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "pain_management_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "pain_management_protocols";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const dischargeCriteria: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "discharge_criteria";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "discharge_criteria";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        criteriaName: import("drizzle-orm/pg-core").PgColumn<{
            name: "criteria_name";
            tableName: "discharge_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        cancerType: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_type";
            tableName: "discharge_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        treatmentType: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_type";
            tableName: "discharge_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        admissionType: import("drizzle-orm/pg-core").PgColumn<{
            name: "admission_type";
            tableName: "discharge_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        clinicalStabilityCriteria: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_stability_criteria";
            tableName: "discharge_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        vitalSignRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "vital_sign_requirements";
            tableName: "discharge_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        laboratoryRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "laboratory_requirements";
            tableName: "discharge_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        symptomControl: import("drizzle-orm/pg-core").PgColumn<{
            name: "symptom_control";
            tableName: "discharge_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        functionalStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "functional_status";
            tableName: "discharge_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        socialRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "social_requirements";
            tableName: "discharge_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        homeCareCriteria: import("drizzle-orm/pg-core").PgColumn<{
            name: "home_care_criteria";
            tableName: "discharge_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        medicationManagement: import("drizzle-orm/pg-core").PgColumn<{
            name: "medication_management";
            tableName: "discharge_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        followUpArrangements: import("drizzle-orm/pg-core").PgColumn<{
            name: "follow_up_arrangements";
            tableName: "discharge_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        transportationArrangements: import("drizzle-orm/pg-core").PgColumn<{
            name: "transportation_arrangements";
            tableName: "discharge_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        emergencyContactInfo: import("drizzle-orm/pg-core").PgColumn<{
            name: "emergency_contact_info";
            tableName: "discharge_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        redFlagSymptoms: import("drizzle-orm/pg-core").PgColumn<{
            name: "red_flag_symptoms";
            tableName: "discharge_criteria";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        patientEducationCompleted: import("drizzle-orm/pg-core").PgColumn<{
            name: "patient_education_completed";
            tableName: "discharge_criteria";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        caregiverEducationCompleted: import("drizzle-orm/pg-core").PgColumn<{
            name: "caregiver_education_completed";
            tableName: "discharge_criteria";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "discharge_criteria";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "discharge_criteria";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "discharge_criteria";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "discharge_criteria";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const followUpProtocols: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "follow_up_protocols";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "follow_up_protocols";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        protocolName: import("drizzle-orm/pg-core").PgColumn<{
            name: "protocol_name";
            tableName: "follow_up_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        cancerType: import("drizzle-orm/pg-core").PgColumn<{
            name: "cancer_type";
            tableName: "follow_up_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        treatmentPhase: import("drizzle-orm/pg-core").PgColumn<{
            name: "treatment_phase";
            tableName: "follow_up_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        timeFrame: import("drizzle-orm/pg-core").PgColumn<{
            name: "time_frame";
            tableName: "follow_up_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        contactMethod: import("drizzle-orm/pg-core").PgColumn<{
            name: "contact_method";
            tableName: "follow_up_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        assessmentComponents: import("drizzle-orm/pg-core").PgColumn<{
            name: "assessment_components";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        vitalSignsRequired: import("drizzle-orm/pg-core").PgColumn<{
            name: "vital_signs_required";
            tableName: "follow_up_protocols";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        laboratoryTests: import("drizzle-orm/pg-core").PgColumn<{
            name: "laboratory_tests";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        imagingRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "imaging_requirements";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        symptomAssessment: import("drizzle-orm/pg-core").PgColumn<{
            name: "symptom_assessment";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        medicationReview: import("drizzle-orm/pg-core").PgColumn<{
            name: "medication_review";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        adherenceAssessment: import("drizzle-orm/pg-core").PgColumn<{
            name: "adherence_assessment";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        toxicityAssessment: import("drizzle-orm/pg-core").PgColumn<{
            name: "toxicity_assessment";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        functionalAssessment: import("drizzle-orm/pg-core").PgColumn<{
            name: "functional_assessment";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        psychosocialAssessment: import("drizzle-orm/pg-core").PgColumn<{
            name: "psychosocial_assessment";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        caregiverAssessment: import("drizzle-orm/pg-core").PgColumn<{
            name: "caregiver_assessment";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        actionPlans: import("drizzle-orm/pg-core").PgColumn<{
            name: "action_plans";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        escalationCriteria: import("drizzle-orm/pg-core").PgColumn<{
            name: "escalation_criteria";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        documentationRequirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "documentation_requirements";
            tableName: "follow_up_protocols";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "follow_up_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "follow_up_protocols";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "follow_up_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "follow_up_protocols";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "follow_up_protocols";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const dailyOncologyFacts: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "daily_oncology_facts";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "daily_oncology_facts";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        title: import("drizzle-orm/pg-core").PgColumn<{
            name: "title";
            tableName: "daily_oncology_facts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        fact: import("drizzle-orm/pg-core").PgColumn<{
            name: "fact";
            tableName: "daily_oncology_facts";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        category: import("drizzle-orm/pg-core").PgColumn<{
            name: "category";
            tableName: "daily_oncology_facts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        source: import("drizzle-orm/pg-core").PgColumn<{
            name: "source";
            tableName: "daily_oncology_facts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        sourceReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "source_reference";
            tableName: "daily_oncology_facts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "daily_oncology_facts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        tags: import("drizzle-orm/pg-core").PgColumn<{
            name: "tags";
            tableName: "daily_oncology_facts";
            dataType: "array";
            columnType: "PgArray";
            data: string[];
            driverParam: string | string[];
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: import("drizzle-orm").Column<{
                name: "tags";
                tableName: "daily_oncology_facts";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            identity: undefined;
            generated: undefined;
        }, {}, {
            baseBuilder: import("drizzle-orm/pg-core").PgColumnBuilder<{
                name: "tags";
                dataType: "string";
                columnType: "PgText";
                data: string;
                enumValues: [string, ...string[]];
                driverParam: string;
            }, {}, {}, import("drizzle-orm").ColumnBuilderExtraConfig>;
            size: undefined;
        }>;
        difficulty: import("drizzle-orm/pg-core").PgColumn<{
            name: "difficulty";
            tableName: "daily_oncology_facts";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "daily_oncology_facts";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        displayDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "display_date";
            tableName: "daily_oncology_facts";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "daily_oncology_facts";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "daily_oncology_facts";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const dailyOncologyQuiz: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "daily_oncology_quiz";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "daily_oncology_quiz";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        question: import("drizzle-orm/pg-core").PgColumn<{
            name: "question";
            tableName: "daily_oncology_quiz";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        options: import("drizzle-orm/pg-core").PgColumn<{
            name: "options";
            tableName: "daily_oncology_quiz";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        correctAnswer: import("drizzle-orm/pg-core").PgColumn<{
            name: "correct_answer";
            tableName: "daily_oncology_quiz";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 10;
        }>;
        explanation: import("drizzle-orm/pg-core").PgColumn<{
            name: "explanation";
            tableName: "daily_oncology_quiz";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        category: import("drizzle-orm/pg-core").PgColumn<{
            name: "category";
            tableName: "daily_oncology_quiz";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        subcategory: import("drizzle-orm/pg-core").PgColumn<{
            name: "subcategory";
            tableName: "daily_oncology_quiz";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        source: import("drizzle-orm/pg-core").PgColumn<{
            name: "source";
            tableName: "daily_oncology_quiz";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        sourceReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "source_reference";
            tableName: "daily_oncology_quiz";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence_level";
            tableName: "daily_oncology_quiz";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        difficulty: import("drizzle-orm/pg-core").PgColumn<{
            name: "difficulty";
            tableName: "daily_oncology_quiz";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        tags: import("drizzle-orm/pg-core").PgColumn<{
            name: "tags";
            tableName: "daily_oncology_quiz";
            dataType: "array";
            columnType: "PgArray";
            data: string[];
            driverParam: string | string[];
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: import("drizzle-orm").Column<{
                name: "tags";
                tableName: "daily_oncology_quiz";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            identity: undefined;
            generated: undefined;
        }, {}, {
            baseBuilder: import("drizzle-orm/pg-core").PgColumnBuilder<{
                name: "tags";
                dataType: "string";
                columnType: "PgText";
                data: string;
                enumValues: [string, ...string[]];
                driverParam: string;
            }, {}, {}, import("drizzle-orm").ColumnBuilderExtraConfig>;
            size: undefined;
        }>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "daily_oncology_quiz";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        displayDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "display_date";
            tableName: "daily_oncology_quiz";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "daily_oncology_quiz";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "daily_oncology_quiz";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const userQuizResponses: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "user_quiz_responses";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "user_quiz_responses";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "user_quiz_responses";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        quizId: import("drizzle-orm/pg-core").PgColumn<{
            name: "quiz_id";
            tableName: "user_quiz_responses";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        selectedAnswer: import("drizzle-orm/pg-core").PgColumn<{
            name: "selected_answer";
            tableName: "user_quiz_responses";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 10;
        }>;
        isCorrect: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_correct";
            tableName: "user_quiz_responses";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        timeSpent: import("drizzle-orm/pg-core").PgColumn<{
            name: "time_spent";
            tableName: "user_quiz_responses";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        responseDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "response_date";
            tableName: "user_quiz_responses";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const insertDailyOncologyFactSchema: import("drizzle-zod").BuildSchema<"insert", {
    id: import("drizzle-orm/pg-core").PgColumn<{
        name: "id";
        tableName: "daily_oncology_facts";
        dataType: "string";
        columnType: "PgUUID";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: true;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    title: import("drizzle-orm/pg-core").PgColumn<{
        name: "title";
        tableName: "daily_oncology_facts";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 255;
    }>;
    fact: import("drizzle-orm/pg-core").PgColumn<{
        name: "fact";
        tableName: "daily_oncology_facts";
        dataType: "string";
        columnType: "PgText";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    category: import("drizzle-orm/pg-core").PgColumn<{
        name: "category";
        tableName: "daily_oncology_facts";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 100;
    }>;
    source: import("drizzle-orm/pg-core").PgColumn<{
        name: "source";
        tableName: "daily_oncology_facts";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 100;
    }>;
    sourceReference: import("drizzle-orm/pg-core").PgColumn<{
        name: "source_reference";
        tableName: "daily_oncology_facts";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 255;
    }>;
    evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
        name: "evidence_level";
        tableName: "daily_oncology_facts";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 50;
    }>;
    tags: import("drizzle-orm/pg-core").PgColumn<{
        name: "tags";
        tableName: "daily_oncology_facts";
        dataType: "array";
        columnType: "PgArray";
        data: string[];
        driverParam: string | string[];
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: import("drizzle-orm").Column<{
            name: "tags";
            tableName: "daily_oncology_facts";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        identity: undefined;
        generated: undefined;
    }, {}, {
        baseBuilder: import("drizzle-orm/pg-core").PgColumnBuilder<{
            name: "tags";
            dataType: "string";
            columnType: "PgText";
            data: string;
            enumValues: [string, ...string[]];
            driverParam: string;
        }, {}, {}, import("drizzle-orm").ColumnBuilderExtraConfig>;
        size: undefined;
    }>;
    difficulty: import("drizzle-orm/pg-core").PgColumn<{
        name: "difficulty";
        tableName: "daily_oncology_facts";
        dataType: "number";
        columnType: "PgInteger";
        data: number;
        driverParam: string | number;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    isActive: import("drizzle-orm/pg-core").PgColumn<{
        name: "is_active";
        tableName: "daily_oncology_facts";
        dataType: "boolean";
        columnType: "PgBoolean";
        data: boolean;
        driverParam: boolean;
        notNull: false;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    displayDate: import("drizzle-orm/pg-core").PgColumn<{
        name: "display_date";
        tableName: "daily_oncology_facts";
        dataType: "date";
        columnType: "PgTimestamp";
        data: Date;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    createdAt: import("drizzle-orm/pg-core").PgColumn<{
        name: "created_at";
        tableName: "daily_oncology_facts";
        dataType: "date";
        columnType: "PgTimestamp";
        data: Date;
        driverParam: string;
        notNull: false;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    updatedAt: import("drizzle-orm/pg-core").PgColumn<{
        name: "updated_at";
        tableName: "daily_oncology_facts";
        dataType: "date";
        columnType: "PgTimestamp";
        data: Date;
        driverParam: string;
        notNull: false;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
}, undefined>;
export declare const insertDailyOncologyQuizSchema: import("drizzle-zod").BuildSchema<"insert", {
    id: import("drizzle-orm/pg-core").PgColumn<{
        name: "id";
        tableName: "daily_oncology_quiz";
        dataType: "string";
        columnType: "PgUUID";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: true;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    question: import("drizzle-orm/pg-core").PgColumn<{
        name: "question";
        tableName: "daily_oncology_quiz";
        dataType: "string";
        columnType: "PgText";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    options: import("drizzle-orm/pg-core").PgColumn<{
        name: "options";
        tableName: "daily_oncology_quiz";
        dataType: "json";
        columnType: "PgJsonb";
        data: unknown;
        driverParam: unknown;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    correctAnswer: import("drizzle-orm/pg-core").PgColumn<{
        name: "correct_answer";
        tableName: "daily_oncology_quiz";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 10;
    }>;
    explanation: import("drizzle-orm/pg-core").PgColumn<{
        name: "explanation";
        tableName: "daily_oncology_quiz";
        dataType: "string";
        columnType: "PgText";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    category: import("drizzle-orm/pg-core").PgColumn<{
        name: "category";
        tableName: "daily_oncology_quiz";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 100;
    }>;
    subcategory: import("drizzle-orm/pg-core").PgColumn<{
        name: "subcategory";
        tableName: "daily_oncology_quiz";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 100;
    }>;
    source: import("drizzle-orm/pg-core").PgColumn<{
        name: "source";
        tableName: "daily_oncology_quiz";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 100;
    }>;
    sourceReference: import("drizzle-orm/pg-core").PgColumn<{
        name: "source_reference";
        tableName: "daily_oncology_quiz";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 255;
    }>;
    evidenceLevel: import("drizzle-orm/pg-core").PgColumn<{
        name: "evidence_level";
        tableName: "daily_oncology_quiz";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 50;
    }>;
    difficulty: import("drizzle-orm/pg-core").PgColumn<{
        name: "difficulty";
        tableName: "daily_oncology_quiz";
        dataType: "number";
        columnType: "PgInteger";
        data: number;
        driverParam: string | number;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    tags: import("drizzle-orm/pg-core").PgColumn<{
        name: "tags";
        tableName: "daily_oncology_quiz";
        dataType: "array";
        columnType: "PgArray";
        data: string[];
        driverParam: string | string[];
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: import("drizzle-orm").Column<{
            name: "tags";
            tableName: "daily_oncology_quiz";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        identity: undefined;
        generated: undefined;
    }, {}, {
        baseBuilder: import("drizzle-orm/pg-core").PgColumnBuilder<{
            name: "tags";
            dataType: "string";
            columnType: "PgText";
            data: string;
            enumValues: [string, ...string[]];
            driverParam: string;
        }, {}, {}, import("drizzle-orm").ColumnBuilderExtraConfig>;
        size: undefined;
    }>;
    isActive: import("drizzle-orm/pg-core").PgColumn<{
        name: "is_active";
        tableName: "daily_oncology_quiz";
        dataType: "boolean";
        columnType: "PgBoolean";
        data: boolean;
        driverParam: boolean;
        notNull: false;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    displayDate: import("drizzle-orm/pg-core").PgColumn<{
        name: "display_date";
        tableName: "daily_oncology_quiz";
        dataType: "date";
        columnType: "PgTimestamp";
        data: Date;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    createdAt: import("drizzle-orm/pg-core").PgColumn<{
        name: "created_at";
        tableName: "daily_oncology_quiz";
        dataType: "date";
        columnType: "PgTimestamp";
        data: Date;
        driverParam: string;
        notNull: false;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    updatedAt: import("drizzle-orm/pg-core").PgColumn<{
        name: "updated_at";
        tableName: "daily_oncology_quiz";
        dataType: "date";
        columnType: "PgTimestamp";
        data: Date;
        driverParam: string;
        notNull: false;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
}, undefined>;
export declare const insertUserQuizResponseSchema: import("drizzle-zod").BuildSchema<"insert", {
    id: import("drizzle-orm/pg-core").PgColumn<{
        name: "id";
        tableName: "user_quiz_responses";
        dataType: "string";
        columnType: "PgUUID";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: true;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    userId: import("drizzle-orm/pg-core").PgColumn<{
        name: "user_id";
        tableName: "user_quiz_responses";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: number | undefined;
    }>;
    quizId: import("drizzle-orm/pg-core").PgColumn<{
        name: "quiz_id";
        tableName: "user_quiz_responses";
        dataType: "string";
        columnType: "PgUUID";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    selectedAnswer: import("drizzle-orm/pg-core").PgColumn<{
        name: "selected_answer";
        tableName: "user_quiz_responses";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 10;
    }>;
    isCorrect: import("drizzle-orm/pg-core").PgColumn<{
        name: "is_correct";
        tableName: "user_quiz_responses";
        dataType: "boolean";
        columnType: "PgBoolean";
        data: boolean;
        driverParam: boolean;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    timeSpent: import("drizzle-orm/pg-core").PgColumn<{
        name: "time_spent";
        tableName: "user_quiz_responses";
        dataType: "number";
        columnType: "PgInteger";
        data: number;
        driverParam: string | number;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    responseDate: import("drizzle-orm/pg-core").PgColumn<{
        name: "response_date";
        tableName: "user_quiz_responses";
        dataType: "date";
        columnType: "PgTimestamp";
        data: Date;
        driverParam: string;
        notNull: false;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
}, undefined>;
export type UpsertUser = typeof users.$inferInsert;
export type User = typeof users.$inferSelect;
export type InsertUser = z.infer<typeof insertUserSchema>;
export type DecisionSupportInput = typeof decisionSupportInputs.$inferSelect;
export type InsertDecisionSupportInput = z.infer<typeof insertDecisionSupportInputSchema>;
export type ClinicalProtocol = typeof clinicalProtocols.$inferSelect;
export type InsertClinicalProtocol = z.infer<typeof insertClinicalProtocolSchema>;
export type AiInteraction = typeof aiInteractions.$inferSelect;
export type InsertAiInteraction = z.infer<typeof insertAiInteractionSchema>;
export type TreatmentProtocol = typeof treatmentProtocols.$inferSelect;
export type CdProtocol = typeof cdProtocols.$inferSelect;
export type InsertCdProtocol = z.infer<typeof insertCdProtocolSchema>;
export type OncologyMedication = typeof oncologyMedications.$inferSelect;
export type InsertOncologyMedication = z.infer<typeof insertOncologyMedicationSchema>;
export type AuditLogEntry = typeof auditLog.$inferSelect;
export type NccnGuideline = typeof nccnGuidelines.$inferSelect;
export type InsertNccnGuideline = z.infer<typeof insertNccnGuidelinesSchema>;
export type ClinicalDecisionSupport = typeof clinicalDecisionSupport.$inferSelect;
export type InsertClinicalDecisionSupport = z.infer<typeof insertClinicalDecisionSupportSchema>;
export type BiomarkerGuideline = typeof biomarkerGuidelines.$inferSelect;
export type InsertBiomarkerGuideline = z.infer<typeof insertBiomarkerGuidelinesSchema>;
export type AdmissionCriteria = typeof admissionCriteria.$inferSelect;
export type EmergencyScenario = typeof emergencyScenarios.$inferSelect;
export type EmergencyProtocol = typeof emergencyProtocols.$inferSelect;
export type AntibioticProtocol = typeof antibioticProtocols.$inferSelect;
export type MonitoringParameter = typeof monitoringParameters.$inferSelect;
export type DailyAssessmentProtocol = typeof dailyAssessmentProtocols.$inferSelect;
export type PerformanceStatusScale = typeof performanceStatusScales.$inferSelect;
export type AdverseEvent = typeof adverseEvents.$inferSelect;
export type AdverseEventManagement = typeof adverseEventManagement.$inferSelect;
export type DrugToxicityProfile = typeof drugToxicityProfiles.$inferSelect;
export type SupportiveCareProtocol = typeof supportiveCareProtocols.$inferSelect;
export type AntiemeticProtocol = typeof antiemeticProtocols.$inferSelect;
export type PainManagementProtocol = typeof painManagementProtocols.$inferSelect;
export type DischargeCriteria = typeof dischargeCriteria.$inferSelect;
export type FollowUpProtocol = typeof followUpProtocols.$inferSelect;
export type EducationalTopic = typeof educationalTopics.$inferSelect;
export type InsertEducationalTopic = z.infer<typeof insertEducationalTopicSchema>;
export type ClinicalScenario = typeof clinicalScenarios.$inferSelect;
export type InsertClinicalScenario = z.infer<typeof insertClinicalScenarioSchema>;
export type Question = typeof questionBank.$inferSelect;
export type InsertQuestion = z.infer<typeof insertQuestionSchema>;
export type DailyOncologyFact = typeof dailyOncologyFacts.$inferSelect;
export type InsertDailyOncologyFact = z.infer<typeof insertDailyOncologyFactSchema>;
export type DailyOncologyQuiz = typeof dailyOncologyQuiz.$inferSelect;
export type InsertDailyOncologyQuiz = z.infer<typeof insertDailyOncologyQuizSchema>;
export type UserQuizResponse = typeof userQuizResponses.$inferSelect;
export type InsertUserQuizResponse = z.infer<typeof insertUserQuizResponseSchema>;
export declare const insertTreatmentPlanCriteriaSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    category: z.ZodString;
    value: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isCommon: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    sortOrder: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    cancerSpecific: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    clinicalContext: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    cutoffValue: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    parentCategory: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    evidenceLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "id" | "createdAt">, "strip", z.ZodTypeAny, {
    value: string;
    category: string;
    isActive?: boolean | null | undefined;
    evidenceLevel?: string | null | undefined;
    description?: string | null | undefined;
    isCommon?: boolean | null | undefined;
    sortOrder?: number | null | undefined;
    cancerSpecific?: string | null | undefined;
    clinicalContext?: string | null | undefined;
    cutoffValue?: string | null | undefined;
    parentCategory?: string | null | undefined;
}, {
    value: string;
    category: string;
    isActive?: boolean | null | undefined;
    evidenceLevel?: string | null | undefined;
    description?: string | null | undefined;
    isCommon?: boolean | null | undefined;
    sortOrder?: number | null | undefined;
    cancerSpecific?: string | null | undefined;
    clinicalContext?: string | null | undefined;
    cutoffValue?: string | null | undefined;
    parentCategory?: string | null | undefined;
}>;
export declare const insertTreatmentPlanMappingSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    cancerType: z.ZodString;
    histology: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    biomarkers: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    treatmentIntent: z.ZodString;
    lineOfTreatment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    treatmentProtocol: z.ZodString;
    evidenceReference: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    nccnReference: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    conflictingBiomarkers: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    requiredStage: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    confidenceScore: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    requiresCombinationMatch: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    toxicityLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    priorityTag: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    performanceStatusMin: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    performanceStatusMax: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    comorbidityExclusions: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    requiredLabValues: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    drugInteractions: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    monitoringRequirements: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    doseModifications: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    specialConsiderations: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    alternativeOptions: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    costTier: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    availabilityStatus: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    cancerType: string;
    treatmentIntent: string;
    treatmentProtocol: string;
    isActive?: boolean | null | undefined;
    confidenceScore?: string | null | undefined;
    monitoringRequirements?: import("drizzle-zod/utils").Json | undefined;
    doseModifications?: import("drizzle-zod/utils").Json | undefined;
    specialConsiderations?: string | null | undefined;
    alternativeOptions?: import("drizzle-zod/utils").Json | undefined;
    nccnReference?: string | null | undefined;
    histology?: string | null | undefined;
    biomarkers?: import("drizzle-zod/utils").Json | undefined;
    lineOfTreatment?: string | null | undefined;
    evidenceReference?: string | null | undefined;
    conflictingBiomarkers?: import("drizzle-zod/utils").Json | undefined;
    requiredStage?: import("drizzle-zod/utils").Json | undefined;
    requiresCombinationMatch?: boolean | null | undefined;
    toxicityLevel?: string | null | undefined;
    priorityTag?: string | null | undefined;
    performanceStatusMin?: number | null | undefined;
    performanceStatusMax?: number | null | undefined;
    comorbidityExclusions?: import("drizzle-zod/utils").Json | undefined;
    requiredLabValues?: import("drizzle-zod/utils").Json | undefined;
    drugInteractions?: import("drizzle-zod/utils").Json | undefined;
    costTier?: string | null | undefined;
    availabilityStatus?: string | null | undefined;
}, {
    cancerType: string;
    treatmentIntent: string;
    treatmentProtocol: string;
    isActive?: boolean | null | undefined;
    confidenceScore?: string | null | undefined;
    monitoringRequirements?: import("drizzle-zod/utils").Json | undefined;
    doseModifications?: import("drizzle-zod/utils").Json | undefined;
    specialConsiderations?: string | null | undefined;
    alternativeOptions?: import("drizzle-zod/utils").Json | undefined;
    nccnReference?: string | null | undefined;
    histology?: string | null | undefined;
    biomarkers?: import("drizzle-zod/utils").Json | undefined;
    lineOfTreatment?: string | null | undefined;
    evidenceReference?: string | null | undefined;
    conflictingBiomarkers?: import("drizzle-zod/utils").Json | undefined;
    requiredStage?: import("drizzle-zod/utils").Json | undefined;
    requiresCombinationMatch?: boolean | null | undefined;
    toxicityLevel?: string | null | undefined;
    priorityTag?: string | null | undefined;
    performanceStatusMin?: number | null | undefined;
    performanceStatusMax?: number | null | undefined;
    comorbidityExclusions?: import("drizzle-zod/utils").Json | undefined;
    requiredLabValues?: import("drizzle-zod/utils").Json | undefined;
    drugInteractions?: import("drizzle-zod/utils").Json | undefined;
    costTier?: string | null | undefined;
    availabilityStatus?: string | null | undefined;
}>;
export declare const insertDrugInteractionSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    drug1: z.ZodString;
    drug2: z.ZodString;
    interactionType: z.ZodString;
    mechanism: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    clinicalEffect: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    management: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    evidenceLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    severity: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    onset: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    documentation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    drug1: string;
    drug2: string;
    interactionType: string;
    severity?: string | null | undefined;
    evidenceLevel?: string | null | undefined;
    mechanism?: string | null | undefined;
    clinicalEffect?: string | null | undefined;
    management?: string | null | undefined;
    onset?: string | null | undefined;
    documentation?: string | null | undefined;
}, {
    drug1: string;
    drug2: string;
    interactionType: string;
    severity?: string | null | undefined;
    evidenceLevel?: string | null | undefined;
    mechanism?: string | null | undefined;
    clinicalEffect?: string | null | undefined;
    management?: string | null | undefined;
    onset?: string | null | undefined;
    documentation?: string | null | undefined;
}>;
export declare const insertComorbidityAssessmentSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    comorbidityName: z.ZodString;
    category: z.ZodString;
    severity: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    treatmentImpact: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    contraindicatedDrugs: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    dosageAdjustments: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    monitoringRequirements: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    specialConsiderations: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    nccnReference: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    evidenceLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    category: string;
    comorbidityName: string;
    severity?: string | null | undefined;
    evidenceLevel?: string | null | undefined;
    monitoringRequirements?: import("drizzle-zod/utils").Json | undefined;
    specialConsiderations?: string | null | undefined;
    nccnReference?: string | null | undefined;
    treatmentImpact?: string | null | undefined;
    contraindicatedDrugs?: import("drizzle-zod/utils").Json | undefined;
    dosageAdjustments?: import("drizzle-zod/utils").Json | undefined;
}, {
    category: string;
    comorbidityName: string;
    severity?: string | null | undefined;
    evidenceLevel?: string | null | undefined;
    monitoringRequirements?: import("drizzle-zod/utils").Json | undefined;
    specialConsiderations?: string | null | undefined;
    nccnReference?: string | null | undefined;
    treatmentImpact?: string | null | undefined;
    contraindicatedDrugs?: import("drizzle-zod/utils").Json | undefined;
    dosageAdjustments?: import("drizzle-zod/utils").Json | undefined;
}>;
export declare const insertPerformanceStatusCriteriaSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    scaleType: z.ZodString;
    scaleValue: z.ZodNumber;
    description: z.ZodString;
    functionalCapacity: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    treatmentEligibility: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    prognosticSignificance: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    assessmentGuidelines: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    description: string;
    scaleType: string;
    scaleValue: number;
    functionalCapacity?: string | null | undefined;
    treatmentEligibility?: import("drizzle-zod/utils").Json | undefined;
    prognosticSignificance?: string | null | undefined;
    assessmentGuidelines?: string | null | undefined;
}, {
    description: string;
    scaleType: string;
    scaleValue: number;
    functionalCapacity?: string | null | undefined;
    treatmentEligibility?: import("drizzle-zod/utils").Json | undefined;
    prognosticSignificance?: string | null | undefined;
    assessmentGuidelines?: string | null | undefined;
}>;
export type TreatmentPlanCriteria = typeof treatmentPlanCriteria.$inferSelect;
export type InsertTreatmentPlanCriteria = z.infer<typeof insertTreatmentPlanCriteriaSchema>;
export type TreatmentPlanMapping = typeof treatmentPlanMappings.$inferSelect;
export type InsertTreatmentPlanMapping = z.infer<typeof insertTreatmentPlanMappingSchema>;
export type DrugInteraction = typeof drugInteractions.$inferSelect;
export type InsertDrugInteraction = z.infer<typeof insertDrugInteractionSchema>;
export type ComorbidityAssessment = typeof comorbidityAssessment.$inferSelect;
export type InsertComorbidityAssessment = z.infer<typeof insertComorbidityAssessmentSchema>;
export type PerformanceStatusCriteria = typeof performanceStatusCriteria.$inferSelect;
export type InsertPerformanceStatusCriteria = z.infer<typeof insertPerformanceStatusCriteriaSchema>;
export declare const validatedSymptomAssessments: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "validated_symptom_assessments";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "validated_symptom_assessments";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "validated_symptom_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "validated_symptom_assessments";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        assessmentType: import("drizzle-orm/pg-core").PgColumn<{
            name: "assessment_type";
            tableName: "validated_symptom_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        assessmentData: import("drizzle-orm/pg-core").PgColumn<{
            name: "assessment_data";
            tableName: "validated_symptom_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        totalScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_score";
            tableName: "validated_symptom_assessments";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        severityLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "severity_level";
            tableName: "validated_symptom_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        clinicalInterpretation: import("drizzle-orm/pg-core").PgColumn<{
            name: "clinical_interpretation";
            tableName: "validated_symptom_assessments";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        aiAnalysis: import("drizzle-orm/pg-core").PgColumn<{
            name: "ai_analysis";
            tableName: "validated_symptom_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        recommendedInterventions: import("drizzle-orm/pg-core").PgColumn<{
            name: "recommended_interventions";
            tableName: "validated_symptom_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        followUpRequired: import("drizzle-orm/pg-core").PgColumn<{
            name: "follow_up_required";
            tableName: "validated_symptom_assessments";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nextAssessmentDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "next_assessment_date";
            tableName: "validated_symptom_assessments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "validated_symptom_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "validated_symptom_assessments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "validated_symptom_assessments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "validated_symptom_assessments";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const painPhenotypes: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "pain_phenotypes";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "pain_phenotypes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "pain_phenotypes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "pain_phenotypes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        painType: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_type";
            tableName: "pain_phenotypes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        painMechanism: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_mechanism";
            tableName: "pain_phenotypes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        painLocation: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_location";
            tableName: "pain_phenotypes";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        painQuality: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_quality";
            tableName: "pain_phenotypes";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        painPattern: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_pattern";
            tableName: "pain_phenotypes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        painIntensityCurrent: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_intensity_current";
            tableName: "pain_phenotypes";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        painIntensityWorst: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_intensity_worst";
            tableName: "pain_phenotypes";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        painIntensityAverage: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_intensity_average";
            tableName: "pain_phenotypes";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        painImpactFunction: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_impact_function";
            tableName: "pain_phenotypes";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        painImpactMood: import("drizzle-orm/pg-core").PgColumn<{
            name: "pain_impact_mood";
            tableName: "pain_phenotypes";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        triggeringFactors: import("drizzle-orm/pg-core").PgColumn<{
            name: "triggering_factors";
            tableName: "pain_phenotypes";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        relievingFactors: import("drizzle-orm/pg-core").PgColumn<{
            name: "relieving_factors";
            tableName: "pain_phenotypes";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        currentMedications: import("drizzle-orm/pg-core").PgColumn<{
            name: "current_medications";
            tableName: "pain_phenotypes";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        previousTreatments: import("drizzle-orm/pg-core").PgColumn<{
            name: "previous_treatments";
            tableName: "pain_phenotypes";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        comorbidities: import("drizzle-orm/pg-core").PgColumn<{
            name: "comorbidities";
            tableName: "pain_phenotypes";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        assessmentToolsUsed: import("drizzle-orm/pg-core").PgColumn<{
            name: "assessment_tools_used";
            tableName: "pain_phenotypes";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        aiPhenotypePrediction: import("drizzle-orm/pg-core").PgColumn<{
            name: "ai_phenotype_prediction";
            tableName: "pain_phenotypes";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        recommendedApproach: import("drizzle-orm/pg-core").PgColumn<{
            name: "recommended_approach";
            tableName: "pain_phenotypes";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        specialistReferralNeeded: import("drizzle-orm/pg-core").PgColumn<{
            name: "specialist_referral_needed";
            tableName: "pain_phenotypes";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "pain_phenotypes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "pain_phenotypes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "pain_phenotypes";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const communicationLogs: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "communication_logs";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "communication_logs";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "communication_logs";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "communication_logs";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        communicationType: import("drizzle-orm/pg-core").PgColumn<{
            name: "communication_type";
            tableName: "communication_logs";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        conversationFramework: import("drizzle-orm/pg-core").PgColumn<{
            name: "conversation_framework";
            tableName: "communication_logs";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        participants: import("drizzle-orm/pg-core").PgColumn<{
            name: "participants";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        conversationContext: import("drizzle-orm/pg-core").PgColumn<{
            name: "conversation_context";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        communicationSteps: import("drizzle-orm/pg-core").PgColumn<{
            name: "communication_steps";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        patientUnderstanding: import("drizzle-orm/pg-core").PgColumn<{
            name: "patient_understanding";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        emotionalResponses: import("drizzle-orm/pg-core").PgColumn<{
            name: "emotional_responses";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        questionsConcerns: import("drizzle-orm/pg-core").PgColumn<{
            name: "questions_concerns";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        decisionsMade: import("drizzle-orm/pg-core").PgColumn<{
            name: "decisions_made";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        followUpPlanned: import("drizzle-orm/pg-core").PgColumn<{
            name: "follow_up_planned";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        goalsIdentified: import("drizzle-orm/pg-core").PgColumn<{
            name: "goals_identified";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        advanceDirectivesDiscussed: import("drizzle-orm/pg-core").PgColumn<{
            name: "advance_directives_discussed";
            tableName: "communication_logs";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        codeStatusDiscussed: import("drizzle-orm/pg-core").PgColumn<{
            name: "code_status_discussed";
            tableName: "communication_logs";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        culturalConsiderations: import("drizzle-orm/pg-core").PgColumn<{
            name: "cultural_considerations";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        communicationBarriers: import("drizzle-orm/pg-core").PgColumn<{
            name: "communication_barriers";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        interpreterUsed: import("drizzle-orm/pg-core").PgColumn<{
            name: "interpreter_used";
            tableName: "communication_logs";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        satisfactionRating: import("drizzle-orm/pg-core").PgColumn<{
            name: "satisfaction_rating";
            tableName: "communication_logs";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        aiCommunicationInsights: import("drizzle-orm/pg-core").PgColumn<{
            name: "ai_communication_insights";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        improvementRecommendations: import("drizzle-orm/pg-core").PgColumn<{
            name: "improvement_recommendations";
            tableName: "communication_logs";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnReference: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_reference";
            tableName: "communication_logs";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "communication_logs";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "communication_logs";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "communication_logs";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const spiritualAssessments: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "spiritual_assessments";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "spiritual_assessments";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "spiritual_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "spiritual_assessments";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        assessmentType: import("drizzle-orm/pg-core").PgColumn<{
            name: "assessment_type";
            tableName: "spiritual_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        faithTradition: import("drizzle-orm/pg-core").PgColumn<{
            name: "faith_tradition";
            tableName: "spiritual_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        faithImportanceRating: import("drizzle-orm/pg-core").PgColumn<{
            name: "faith_importance_rating";
            tableName: "spiritual_assessments";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        spiritualCommunity: import("drizzle-orm/pg-core").PgColumn<{
            name: "spiritual_community";
            tableName: "spiritual_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        spiritualPractices: import("drizzle-orm/pg-core").PgColumn<{
            name: "spiritual_practices";
            tableName: "spiritual_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        spiritualSupportSources: import("drizzle-orm/pg-core").PgColumn<{
            name: "spiritual_support_sources";
            tableName: "spiritual_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        spiritualConcerns: import("drizzle-orm/pg-core").PgColumn<{
            name: "spiritual_concerns";
            tableName: "spiritual_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        meaningMaking: import("drizzle-orm/pg-core").PgColumn<{
            name: "meaning_making";
            tableName: "spiritual_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        hopeSources: import("drizzle-orm/pg-core").PgColumn<{
            name: "hope_sources";
            tableName: "spiritual_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        forgivenessIssues: import("drizzle-orm/pg-core").PgColumn<{
            name: "forgiveness_issues";
            tableName: "spiritual_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        endOfLifeBeliefs: import("drizzle-orm/pg-core").PgColumn<{
            name: "end_of_life_beliefs";
            tableName: "spiritual_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        ritualPreferences: import("drizzle-orm/pg-core").PgColumn<{
            name: "ritual_preferences";
            tableName: "spiritual_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        chaplaincyReferralNeeded: import("drizzle-orm/pg-core").PgColumn<{
            name: "chaplaincy_referral_needed";
            tableName: "spiritual_assessments";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        chaplaincyReferralMade: import("drizzle-orm/pg-core").PgColumn<{
            name: "chaplaincy_referral_made";
            tableName: "spiritual_assessments";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        spiritualCarePlan: import("drizzle-orm/pg-core").PgColumn<{
            name: "spiritual_care_plan";
            tableName: "spiritual_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        culturalConsiderations: import("drizzle-orm/pg-core").PgColumn<{
            name: "cultural_considerations";
            tableName: "spiritual_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        familySpiritualNeeds: import("drizzle-orm/pg-core").PgColumn<{
            name: "family_spiritual_needs";
            tableName: "spiritual_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        aiSpiritualInsights: import("drizzle-orm/pg-core").PgColumn<{
            name: "ai_spiritual_insights";
            tableName: "spiritual_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "spiritual_assessments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "spiritual_assessments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "spiritual_assessments";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const oncologicalEmergencies: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "oncological_emergencies";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "oncological_emergencies";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "oncological_emergencies";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "oncological_emergencies";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        emergencyType: import("drizzle-orm/pg-core").PgColumn<{
            name: "emergency_type";
            tableName: "oncological_emergencies";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        presentationSymptoms: import("drizzle-orm/pg-core").PgColumn<{
            name: "presentation_symptoms";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        severityLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "severity_level";
            tableName: "oncological_emergencies";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        timeToRecognition: import("drizzle-orm/pg-core").PgColumn<{
            name: "time_to_recognition";
            tableName: "oncological_emergencies";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        diagnosticWorkup: import("drizzle-orm/pg-core").PgColumn<{
            name: "diagnostic_workup";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        nccnProtocolFollowed: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_protocol_followed";
            tableName: "oncological_emergencies";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        immediateInterventions: import("drizzle-orm/pg-core").PgColumn<{
            name: "immediate_interventions";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        responseToTreatment: import("drizzle-orm/pg-core").PgColumn<{
            name: "response_to_treatment";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        complications: import("drizzle-orm/pg-core").PgColumn<{
            name: "complications";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        specialistConsultations: import("drizzle-orm/pg-core").PgColumn<{
            name: "specialist_consultations";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        imagingStudies: import("drizzle-orm/pg-core").PgColumn<{
            name: "imaging_studies";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        laboratoryValues: import("drizzle-orm/pg-core").PgColumn<{
            name: "laboratory_values";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        monitoringParameters: import("drizzle-orm/pg-core").PgColumn<{
            name: "monitoring_parameters";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        familyNotification: import("drizzle-orm/pg-core").PgColumn<{
            name: "family_notification";
            tableName: "oncological_emergencies";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        familyCommunicationLog: import("drizzle-orm/pg-core").PgColumn<{
            name: "family_communication_log";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        dischargePlanning: import("drizzle-orm/pg-core").PgColumn<{
            name: "discharge_planning";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        qualityMetrics: import("drizzle-orm/pg-core").PgColumn<{
            name: "quality_metrics";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        lessonsLearned: import("drizzle-orm/pg-core").PgColumn<{
            name: "lessons_learned";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        aiEmergencyAnalysis: import("drizzle-orm/pg-core").PgColumn<{
            name: "ai_emergency_analysis";
            tableName: "oncological_emergencies";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "oncological_emergencies";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "oncological_emergencies";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "oncological_emergencies";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const palliativeQualityMetrics: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "palliative_quality_metrics";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        metricCategory: import("drizzle-orm/pg-core").PgColumn<{
            name: "metric_category";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        metricName: import("drizzle-orm/pg-core").PgColumn<{
            name: "metric_name";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        metricValue: import("drizzle-orm/pg-core").PgColumn<{
            name: "metric_value";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        metricUnit: import("drizzle-orm/pg-core").PgColumn<{
            name: "metric_unit";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        targetValue: import("drizzle-orm/pg-core").PgColumn<{
            name: "target_value";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        performanceLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "performance_level";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        measurementPeriodStart: import("drizzle-orm/pg-core").PgColumn<{
            name: "measurement_period_start";
            tableName: "palliative_quality_metrics";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        measurementPeriodEnd: import("drizzle-orm/pg-core").PgColumn<{
            name: "measurement_period_end";
            tableName: "palliative_quality_metrics";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        patientPopulation: import("drizzle-orm/pg-core").PgColumn<{
            name: "patient_population";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        nccnQualityIndicator: import("drizzle-orm/pg-core").PgColumn<{
            name: "nccn_quality_indicator";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        dataSource: import("drizzle-orm/pg-core").PgColumn<{
            name: "data_source";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        calculationMethod: import("drizzle-orm/pg-core").PgColumn<{
            name: "calculation_method";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        statisticalSignificance: import("drizzle-orm/pg-core").PgColumn<{
            name: "statistical_significance";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        confidenceInterval: import("drizzle-orm/pg-core").PgColumn<{
            name: "confidence_interval";
            tableName: "palliative_quality_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        trendDirection: import("drizzle-orm/pg-core").PgColumn<{
            name: "trend_direction";
            tableName: "palliative_quality_metrics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        benchmarkComparison: import("drizzle-orm/pg-core").PgColumn<{
            name: "benchmark_comparison";
            tableName: "palliative_quality_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        actionItems: import("drizzle-orm/pg-core").PgColumn<{
            name: "action_items";
            tableName: "palliative_quality_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        responsibleTeam: import("drizzle-orm/pg-core").PgColumn<{
            name: "responsible_team";
            tableName: "palliative_quality_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        improvementTimeline: import("drizzle-orm/pg-core").PgColumn<{
            name: "improvement_timeline";
            tableName: "palliative_quality_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        aiQualityInsights: import("drizzle-orm/pg-core").PgColumn<{
            name: "ai_quality_insights";
            tableName: "palliative_quality_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "palliative_quality_metrics";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "palliative_quality_metrics";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "palliative_quality_metrics";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const caregiverAssessments: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "caregiver_assessments";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "caregiver_assessments";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "caregiver_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "caregiver_assessments";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        caregiverRelationship: import("drizzle-orm/pg-core").PgColumn<{
            name: "caregiver_relationship";
            tableName: "caregiver_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        assessmentType: import("drizzle-orm/pg-core").PgColumn<{
            name: "assessment_type";
            tableName: "caregiver_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        burdenScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "burden_score";
            tableName: "caregiver_assessments";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        strainLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "strain_level";
            tableName: "caregiver_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        physicalHealthImpact: import("drizzle-orm/pg-core").PgColumn<{
            name: "physical_health_impact";
            tableName: "caregiver_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        emotionalHealthImpact: import("drizzle-orm/pg-core").PgColumn<{
            name: "emotional_health_impact";
            tableName: "caregiver_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        socialImpact: import("drizzle-orm/pg-core").PgColumn<{
            name: "social_impact";
            tableName: "caregiver_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        financialImpact: import("drizzle-orm/pg-core").PgColumn<{
            name: "financial_impact";
            tableName: "caregiver_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        workImpact: import("drizzle-orm/pg-core").PgColumn<{
            name: "work_impact";
            tableName: "caregiver_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        supportSystems: import("drizzle-orm/pg-core").PgColumn<{
            name: "support_systems";
            tableName: "caregiver_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        copingStrategies: import("drizzle-orm/pg-core").PgColumn<{
            name: "coping_strategies";
            tableName: "caregiver_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        educationalNeeds: import("drizzle-orm/pg-core").PgColumn<{
            name: "educational_needs";
            tableName: "caregiver_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        respiteCareNeeds: import("drizzle-orm/pg-core").PgColumn<{
            name: "respite_care_needs";
            tableName: "caregiver_assessments";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        professionalSupportNeeded: import("drizzle-orm/pg-core").PgColumn<{
            name: "professional_support_needed";
            tableName: "caregiver_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        supportGroupInterest: import("drizzle-orm/pg-core").PgColumn<{
            name: "support_group_interest";
            tableName: "caregiver_assessments";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        aiCaregiverInsights: import("drizzle-orm/pg-core").PgColumn<{
            name: "ai_caregiver_insights";
            tableName: "caregiver_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        interventionPlan: import("drizzle-orm/pg-core").PgColumn<{
            name: "intervention_plan";
            tableName: "caregiver_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        followUpSchedule: import("drizzle-orm/pg-core").PgColumn<{
            name: "follow_up_schedule";
            tableName: "caregiver_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "caregiver_assessments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "caregiver_assessments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "caregiver_assessments";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const enhancedPsychosocialAssessments: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "enhanced_psychosocial_assessments";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        assessmentType: import("drizzle-orm/pg-core").PgColumn<{
            name: "assessment_type";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        depressionScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "depression_score";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        anxietyScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "anxiety_score";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        distressLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "distress_level";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        suicideRiskLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "suicide_risk_level";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        copingStrategies: import("drizzle-orm/pg-core").PgColumn<{
            name: "coping_strategies";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        socialSupportNetwork: import("drizzle-orm/pg-core").PgColumn<{
            name: "social_support_network";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        financialConcerns: import("drizzle-orm/pg-core").PgColumn<{
            name: "financial_concerns";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        workConcerns: import("drizzle-orm/pg-core").PgColumn<{
            name: "work_concerns";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        insuranceIssues: import("drizzle-orm/pg-core").PgColumn<{
            name: "insurance_issues";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        transportationBarriers: import("drizzle-orm/pg-core").PgColumn<{
            name: "transportation_barriers";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        childcareEldercareNeeds: import("drizzle-orm/pg-core").PgColumn<{
            name: "childcare_eldercare_needs";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        housingStability: import("drizzle-orm/pg-core").PgColumn<{
            name: "housing_stability";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        substanceUseHistory: import("drizzle-orm/pg-core").PgColumn<{
            name: "substance_use_history";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        traumaHistory: import("drizzle-orm/pg-core").PgColumn<{
            name: "trauma_history";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        mentalHealthHistory: import("drizzle-orm/pg-core").PgColumn<{
            name: "mental_health_history";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        culturalFactors: import("drizzle-orm/pg-core").PgColumn<{
            name: "cultural_factors";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        bodyImageConcerns: import("drizzle-orm/pg-core").PgColumn<{
            name: "body_image_concerns";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sexualityIntimacyConcerns: import("drizzle-orm/pg-core").PgColumn<{
            name: "sexuality_intimacy_concerns";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        existentialConcerns: import("drizzle-orm/pg-core").PgColumn<{
            name: "existential_concerns";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        aiPsychosocialInsights: import("drizzle-orm/pg-core").PgColumn<{
            name: "ai_psychosocial_insights";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        interventionRecommendations: import("drizzle-orm/pg-core").PgColumn<{
            name: "intervention_recommendations";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        referralNeeds: import("drizzle-orm/pg-core").PgColumn<{
            name: "referral_needs";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        safetyPlanning: import("drizzle-orm/pg-core").PgColumn<{
            name: "safety_planning";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "enhanced_psychosocial_assessments";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const insertValidatedSymptomAssessmentSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodString;
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    assessmentType: z.ZodString;
    assessmentData: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    totalScore: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    severityLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    clinicalInterpretation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    aiAnalysis: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    recommendedInterventions: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    followUpRequired: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    nextAssessmentDate: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    nccnReference: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    sessionId: string;
    assessmentType: string;
    assessmentData: import("drizzle-zod/utils").Json;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    aiAnalysis?: import("drizzle-zod/utils").Json | undefined;
    nccnReference?: string | null | undefined;
    totalScore?: string | null | undefined;
    severityLevel?: string | null | undefined;
    clinicalInterpretation?: string | null | undefined;
    recommendedInterventions?: import("drizzle-zod/utils").Json | undefined;
    followUpRequired?: boolean | null | undefined;
    nextAssessmentDate?: Date | null | undefined;
}, {
    sessionId: string;
    assessmentType: string;
    assessmentData: import("drizzle-zod/utils").Json;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    aiAnalysis?: import("drizzle-zod/utils").Json | undefined;
    nccnReference?: string | null | undefined;
    totalScore?: string | null | undefined;
    severityLevel?: string | null | undefined;
    clinicalInterpretation?: string | null | undefined;
    recommendedInterventions?: import("drizzle-zod/utils").Json | undefined;
    followUpRequired?: boolean | null | undefined;
    nextAssessmentDate?: Date | null | undefined;
}>;
export declare const insertPainPhenotypeSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodString;
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    painType: z.ZodString;
    painMechanism: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    painLocation: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    painQuality: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    painPattern: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    painIntensityCurrent: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    painIntensityWorst: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    painIntensityAverage: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    painImpactFunction: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    painImpactMood: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    triggeringFactors: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    relievingFactors: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    currentMedications: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    previousTreatments: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    comorbidities: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    assessmentToolsUsed: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    aiPhenotypePrediction: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    recommendedApproach: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    specialistReferralNeeded: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    sessionId: string;
    painType: string;
    painLocation: import("drizzle-zod/utils").Json;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    painMechanism?: string | null | undefined;
    painQuality?: import("drizzle-zod/utils").Json | undefined;
    painPattern?: string | null | undefined;
    painIntensityCurrent?: number | null | undefined;
    painIntensityWorst?: number | null | undefined;
    painIntensityAverage?: number | null | undefined;
    painImpactFunction?: import("drizzle-zod/utils").Json | undefined;
    painImpactMood?: import("drizzle-zod/utils").Json | undefined;
    triggeringFactors?: import("drizzle-zod/utils").Json | undefined;
    relievingFactors?: import("drizzle-zod/utils").Json | undefined;
    currentMedications?: import("drizzle-zod/utils").Json | undefined;
    previousTreatments?: import("drizzle-zod/utils").Json | undefined;
    comorbidities?: import("drizzle-zod/utils").Json | undefined;
    assessmentToolsUsed?: import("drizzle-zod/utils").Json | undefined;
    aiPhenotypePrediction?: import("drizzle-zod/utils").Json | undefined;
    recommendedApproach?: import("drizzle-zod/utils").Json | undefined;
    specialistReferralNeeded?: boolean | null | undefined;
}, {
    sessionId: string;
    painType: string;
    painLocation: import("drizzle-zod/utils").Json;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    painMechanism?: string | null | undefined;
    painQuality?: import("drizzle-zod/utils").Json | undefined;
    painPattern?: string | null | undefined;
    painIntensityCurrent?: number | null | undefined;
    painIntensityWorst?: number | null | undefined;
    painIntensityAverage?: number | null | undefined;
    painImpactFunction?: import("drizzle-zod/utils").Json | undefined;
    painImpactMood?: import("drizzle-zod/utils").Json | undefined;
    triggeringFactors?: import("drizzle-zod/utils").Json | undefined;
    relievingFactors?: import("drizzle-zod/utils").Json | undefined;
    currentMedications?: import("drizzle-zod/utils").Json | undefined;
    previousTreatments?: import("drizzle-zod/utils").Json | undefined;
    comorbidities?: import("drizzle-zod/utils").Json | undefined;
    assessmentToolsUsed?: import("drizzle-zod/utils").Json | undefined;
    aiPhenotypePrediction?: import("drizzle-zod/utils").Json | undefined;
    recommendedApproach?: import("drizzle-zod/utils").Json | undefined;
    specialistReferralNeeded?: boolean | null | undefined;
}>;
export declare const insertCommunicationLogSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodString;
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    communicationType: z.ZodString;
    conversationFramework: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    participants: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    conversationContext: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    communicationSteps: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    patientUnderstanding: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    emotionalResponses: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    questionsConcerns: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    decisionsMade: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    followUpPlanned: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    goalsIdentified: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    advanceDirectivesDiscussed: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    codeStatusDiscussed: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    culturalConsiderations: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    communicationBarriers: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    interpreterUsed: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    satisfactionRating: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    aiCommunicationInsights: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    improvementRecommendations: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    nccnReference: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    sessionId: string;
    communicationType: string;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    nccnReference?: string | null | undefined;
    conversationFramework?: string | null | undefined;
    participants?: import("drizzle-zod/utils").Json | undefined;
    conversationContext?: import("drizzle-zod/utils").Json | undefined;
    communicationSteps?: import("drizzle-zod/utils").Json | undefined;
    patientUnderstanding?: import("drizzle-zod/utils").Json | undefined;
    emotionalResponses?: import("drizzle-zod/utils").Json | undefined;
    questionsConcerns?: import("drizzle-zod/utils").Json | undefined;
    decisionsMade?: import("drizzle-zod/utils").Json | undefined;
    followUpPlanned?: import("drizzle-zod/utils").Json | undefined;
    goalsIdentified?: import("drizzle-zod/utils").Json | undefined;
    advanceDirectivesDiscussed?: boolean | null | undefined;
    codeStatusDiscussed?: boolean | null | undefined;
    culturalConsiderations?: import("drizzle-zod/utils").Json | undefined;
    communicationBarriers?: import("drizzle-zod/utils").Json | undefined;
    interpreterUsed?: boolean | null | undefined;
    satisfactionRating?: number | null | undefined;
    aiCommunicationInsights?: import("drizzle-zod/utils").Json | undefined;
    improvementRecommendations?: import("drizzle-zod/utils").Json | undefined;
}, {
    sessionId: string;
    communicationType: string;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    nccnReference?: string | null | undefined;
    conversationFramework?: string | null | undefined;
    participants?: import("drizzle-zod/utils").Json | undefined;
    conversationContext?: import("drizzle-zod/utils").Json | undefined;
    communicationSteps?: import("drizzle-zod/utils").Json | undefined;
    patientUnderstanding?: import("drizzle-zod/utils").Json | undefined;
    emotionalResponses?: import("drizzle-zod/utils").Json | undefined;
    questionsConcerns?: import("drizzle-zod/utils").Json | undefined;
    decisionsMade?: import("drizzle-zod/utils").Json | undefined;
    followUpPlanned?: import("drizzle-zod/utils").Json | undefined;
    goalsIdentified?: import("drizzle-zod/utils").Json | undefined;
    advanceDirectivesDiscussed?: boolean | null | undefined;
    codeStatusDiscussed?: boolean | null | undefined;
    culturalConsiderations?: import("drizzle-zod/utils").Json | undefined;
    communicationBarriers?: import("drizzle-zod/utils").Json | undefined;
    interpreterUsed?: boolean | null | undefined;
    satisfactionRating?: number | null | undefined;
    aiCommunicationInsights?: import("drizzle-zod/utils").Json | undefined;
    improvementRecommendations?: import("drizzle-zod/utils").Json | undefined;
}>;
export declare const insertSpiritualAssessmentSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodString;
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    assessmentType: z.ZodString;
    faithTradition: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    faithImportanceRating: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    spiritualCommunity: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    spiritualPractices: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    spiritualSupportSources: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    spiritualConcerns: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    meaningMaking: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    hopeSources: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    forgivenessIssues: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    endOfLifeBeliefs: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    ritualPreferences: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    chaplaincyReferralNeeded: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    chaplaincyReferralMade: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    spiritualCarePlan: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    culturalConsiderations: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    familySpiritualNeeds: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    aiSpiritualInsights: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    sessionId: string;
    assessmentType: string;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    culturalConsiderations?: import("drizzle-zod/utils").Json | undefined;
    faithTradition?: string | null | undefined;
    faithImportanceRating?: number | null | undefined;
    spiritualCommunity?: string | null | undefined;
    spiritualPractices?: import("drizzle-zod/utils").Json | undefined;
    spiritualSupportSources?: import("drizzle-zod/utils").Json | undefined;
    spiritualConcerns?: import("drizzle-zod/utils").Json | undefined;
    meaningMaking?: import("drizzle-zod/utils").Json | undefined;
    hopeSources?: import("drizzle-zod/utils").Json | undefined;
    forgivenessIssues?: import("drizzle-zod/utils").Json | undefined;
    endOfLifeBeliefs?: import("drizzle-zod/utils").Json | undefined;
    ritualPreferences?: import("drizzle-zod/utils").Json | undefined;
    chaplaincyReferralNeeded?: boolean | null | undefined;
    chaplaincyReferralMade?: boolean | null | undefined;
    spiritualCarePlan?: import("drizzle-zod/utils").Json | undefined;
    familySpiritualNeeds?: import("drizzle-zod/utils").Json | undefined;
    aiSpiritualInsights?: import("drizzle-zod/utils").Json | undefined;
}, {
    sessionId: string;
    assessmentType: string;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    culturalConsiderations?: import("drizzle-zod/utils").Json | undefined;
    faithTradition?: string | null | undefined;
    faithImportanceRating?: number | null | undefined;
    spiritualCommunity?: string | null | undefined;
    spiritualPractices?: import("drizzle-zod/utils").Json | undefined;
    spiritualSupportSources?: import("drizzle-zod/utils").Json | undefined;
    spiritualConcerns?: import("drizzle-zod/utils").Json | undefined;
    meaningMaking?: import("drizzle-zod/utils").Json | undefined;
    hopeSources?: import("drizzle-zod/utils").Json | undefined;
    forgivenessIssues?: import("drizzle-zod/utils").Json | undefined;
    endOfLifeBeliefs?: import("drizzle-zod/utils").Json | undefined;
    ritualPreferences?: import("drizzle-zod/utils").Json | undefined;
    chaplaincyReferralNeeded?: boolean | null | undefined;
    chaplaincyReferralMade?: boolean | null | undefined;
    spiritualCarePlan?: import("drizzle-zod/utils").Json | undefined;
    familySpiritualNeeds?: import("drizzle-zod/utils").Json | undefined;
    aiSpiritualInsights?: import("drizzle-zod/utils").Json | undefined;
}>;
export declare const insertOncologicalEmergencySchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodString;
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    emergencyType: z.ZodString;
    presentationSymptoms: z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>;
    severityLevel: z.ZodString;
    timeToRecognition: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    diagnosticWorkup: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    nccnProtocolFollowed: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    immediateInterventions: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    responseToTreatment: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    complications: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    specialistConsultations: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    imagingStudies: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    laboratoryValues: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    monitoringParameters: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    familyNotification: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    familyCommunicationLog: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    dischargePlanning: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    qualityMetrics: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    lessonsLearned: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    aiEmergencyAnalysis: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    sessionId: string;
    severityLevel: string;
    emergencyType: string;
    presentationSymptoms: import("drizzle-zod/utils").Json;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    monitoringParameters?: import("drizzle-zod/utils").Json | undefined;
    timeToRecognition?: string | null | undefined;
    diagnosticWorkup?: import("drizzle-zod/utils").Json | undefined;
    nccnProtocolFollowed?: string | null | undefined;
    immediateInterventions?: import("drizzle-zod/utils").Json | undefined;
    responseToTreatment?: import("drizzle-zod/utils").Json | undefined;
    complications?: import("drizzle-zod/utils").Json | undefined;
    specialistConsultations?: import("drizzle-zod/utils").Json | undefined;
    imagingStudies?: import("drizzle-zod/utils").Json | undefined;
    laboratoryValues?: import("drizzle-zod/utils").Json | undefined;
    familyNotification?: boolean | null | undefined;
    familyCommunicationLog?: import("drizzle-zod/utils").Json | undefined;
    dischargePlanning?: import("drizzle-zod/utils").Json | undefined;
    qualityMetrics?: import("drizzle-zod/utils").Json | undefined;
    lessonsLearned?: import("drizzle-zod/utils").Json | undefined;
    aiEmergencyAnalysis?: import("drizzle-zod/utils").Json | undefined;
}, {
    sessionId: string;
    severityLevel: string;
    emergencyType: string;
    presentationSymptoms: import("drizzle-zod/utils").Json;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    monitoringParameters?: import("drizzle-zod/utils").Json | undefined;
    timeToRecognition?: string | null | undefined;
    diagnosticWorkup?: import("drizzle-zod/utils").Json | undefined;
    nccnProtocolFollowed?: string | null | undefined;
    immediateInterventions?: import("drizzle-zod/utils").Json | undefined;
    responseToTreatment?: import("drizzle-zod/utils").Json | undefined;
    complications?: import("drizzle-zod/utils").Json | undefined;
    specialistConsultations?: import("drizzle-zod/utils").Json | undefined;
    imagingStudies?: import("drizzle-zod/utils").Json | undefined;
    laboratoryValues?: import("drizzle-zod/utils").Json | undefined;
    familyNotification?: boolean | null | undefined;
    familyCommunicationLog?: import("drizzle-zod/utils").Json | undefined;
    dischargePlanning?: import("drizzle-zod/utils").Json | undefined;
    qualityMetrics?: import("drizzle-zod/utils").Json | undefined;
    lessonsLearned?: import("drizzle-zod/utils").Json | undefined;
    aiEmergencyAnalysis?: import("drizzle-zod/utils").Json | undefined;
}>;
export declare const insertPalliativeQualityMetricSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    metricCategory: z.ZodString;
    metricName: z.ZodString;
    metricValue: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    metricUnit: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    targetValue: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    performanceLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    measurementPeriodStart: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    measurementPeriodEnd: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    patientPopulation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    nccnQualityIndicator: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dataSource: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    calculationMethod: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    statisticalSignificance: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    confidenceInterval: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    trendDirection: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    benchmarkComparison: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    actionItems: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    responsibleTeam: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    improvementTimeline: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    aiQualityInsights: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    metricCategory: string;
    metricName: string;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    sessionId?: string | null | undefined;
    patientPopulation?: string | null | undefined;
    metricValue?: string | null | undefined;
    metricUnit?: string | null | undefined;
    targetValue?: string | null | undefined;
    performanceLevel?: string | null | undefined;
    measurementPeriodStart?: Date | null | undefined;
    measurementPeriodEnd?: Date | null | undefined;
    nccnQualityIndicator?: string | null | undefined;
    dataSource?: string | null | undefined;
    calculationMethod?: string | null | undefined;
    statisticalSignificance?: string | null | undefined;
    confidenceInterval?: import("drizzle-zod/utils").Json | undefined;
    trendDirection?: string | null | undefined;
    benchmarkComparison?: import("drizzle-zod/utils").Json | undefined;
    actionItems?: import("drizzle-zod/utils").Json | undefined;
    responsibleTeam?: import("drizzle-zod/utils").Json | undefined;
    improvementTimeline?: import("drizzle-zod/utils").Json | undefined;
    aiQualityInsights?: import("drizzle-zod/utils").Json | undefined;
}, {
    metricCategory: string;
    metricName: string;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    sessionId?: string | null | undefined;
    patientPopulation?: string | null | undefined;
    metricValue?: string | null | undefined;
    metricUnit?: string | null | undefined;
    targetValue?: string | null | undefined;
    performanceLevel?: string | null | undefined;
    measurementPeriodStart?: Date | null | undefined;
    measurementPeriodEnd?: Date | null | undefined;
    nccnQualityIndicator?: string | null | undefined;
    dataSource?: string | null | undefined;
    calculationMethod?: string | null | undefined;
    statisticalSignificance?: string | null | undefined;
    confidenceInterval?: import("drizzle-zod/utils").Json | undefined;
    trendDirection?: string | null | undefined;
    benchmarkComparison?: import("drizzle-zod/utils").Json | undefined;
    actionItems?: import("drizzle-zod/utils").Json | undefined;
    responsibleTeam?: import("drizzle-zod/utils").Json | undefined;
    improvementTimeline?: import("drizzle-zod/utils").Json | undefined;
    aiQualityInsights?: import("drizzle-zod/utils").Json | undefined;
}>;
export declare const insertCaregiverAssessmentSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodString;
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    caregiverRelationship: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    assessmentType: z.ZodString;
    burdenScore: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    strainLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    physicalHealthImpact: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    emotionalHealthImpact: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    socialImpact: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    financialImpact: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    workImpact: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    supportSystems: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    copingStrategies: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    educationalNeeds: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    respiteCareNeeds: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    professionalSupportNeeded: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    supportGroupInterest: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    aiCaregiverInsights: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    interventionPlan: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    followUpSchedule: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    sessionId: string;
    assessmentType: string;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    caregiverRelationship?: string | null | undefined;
    burdenScore?: number | null | undefined;
    strainLevel?: string | null | undefined;
    physicalHealthImpact?: import("drizzle-zod/utils").Json | undefined;
    emotionalHealthImpact?: import("drizzle-zod/utils").Json | undefined;
    socialImpact?: import("drizzle-zod/utils").Json | undefined;
    financialImpact?: import("drizzle-zod/utils").Json | undefined;
    workImpact?: import("drizzle-zod/utils").Json | undefined;
    supportSystems?: import("drizzle-zod/utils").Json | undefined;
    copingStrategies?: import("drizzle-zod/utils").Json | undefined;
    educationalNeeds?: import("drizzle-zod/utils").Json | undefined;
    respiteCareNeeds?: boolean | null | undefined;
    professionalSupportNeeded?: import("drizzle-zod/utils").Json | undefined;
    supportGroupInterest?: boolean | null | undefined;
    aiCaregiverInsights?: import("drizzle-zod/utils").Json | undefined;
    interventionPlan?: import("drizzle-zod/utils").Json | undefined;
    followUpSchedule?: import("drizzle-zod/utils").Json | undefined;
}, {
    sessionId: string;
    assessmentType: string;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    caregiverRelationship?: string | null | undefined;
    burdenScore?: number | null | undefined;
    strainLevel?: string | null | undefined;
    physicalHealthImpact?: import("drizzle-zod/utils").Json | undefined;
    emotionalHealthImpact?: import("drizzle-zod/utils").Json | undefined;
    socialImpact?: import("drizzle-zod/utils").Json | undefined;
    financialImpact?: import("drizzle-zod/utils").Json | undefined;
    workImpact?: import("drizzle-zod/utils").Json | undefined;
    supportSystems?: import("drizzle-zod/utils").Json | undefined;
    copingStrategies?: import("drizzle-zod/utils").Json | undefined;
    educationalNeeds?: import("drizzle-zod/utils").Json | undefined;
    respiteCareNeeds?: boolean | null | undefined;
    professionalSupportNeeded?: import("drizzle-zod/utils").Json | undefined;
    supportGroupInterest?: boolean | null | undefined;
    aiCaregiverInsights?: import("drizzle-zod/utils").Json | undefined;
    interventionPlan?: import("drizzle-zod/utils").Json | undefined;
    followUpSchedule?: import("drizzle-zod/utils").Json | undefined;
}>;
export declare const insertEnhancedPsychosocialAssessmentSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodString;
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    assessmentType: z.ZodString;
    depressionScore: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    anxietyScore: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    distressLevel: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    suicideRiskLevel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    copingStrategies: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    socialSupportNetwork: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    financialConcerns: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    workConcerns: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    insuranceIssues: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    transportationBarriers: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    childcareEldercareNeeds: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    housingStability: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    substanceUseHistory: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    traumaHistory: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    mentalHealthHistory: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    culturalFactors: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    bodyImageConcerns: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    sexualityIntimacyConcerns: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    existentialConcerns: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    aiPsychosocialInsights: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    interventionRecommendations: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    referralNeeds: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    safetyPlanning: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod/utils").Json, z.ZodTypeDef, import("drizzle-zod/utils").Json>>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    sessionId: string;
    assessmentType: string;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    copingStrategies?: import("drizzle-zod/utils").Json | undefined;
    depressionScore?: number | null | undefined;
    anxietyScore?: number | null | undefined;
    distressLevel?: number | null | undefined;
    suicideRiskLevel?: string | null | undefined;
    socialSupportNetwork?: import("drizzle-zod/utils").Json | undefined;
    financialConcerns?: import("drizzle-zod/utils").Json | undefined;
    workConcerns?: import("drizzle-zod/utils").Json | undefined;
    insuranceIssues?: import("drizzle-zod/utils").Json | undefined;
    transportationBarriers?: import("drizzle-zod/utils").Json | undefined;
    childcareEldercareNeeds?: import("drizzle-zod/utils").Json | undefined;
    housingStability?: import("drizzle-zod/utils").Json | undefined;
    substanceUseHistory?: import("drizzle-zod/utils").Json | undefined;
    traumaHistory?: import("drizzle-zod/utils").Json | undefined;
    mentalHealthHistory?: import("drizzle-zod/utils").Json | undefined;
    culturalFactors?: import("drizzle-zod/utils").Json | undefined;
    bodyImageConcerns?: import("drizzle-zod/utils").Json | undefined;
    sexualityIntimacyConcerns?: import("drizzle-zod/utils").Json | undefined;
    existentialConcerns?: import("drizzle-zod/utils").Json | undefined;
    aiPsychosocialInsights?: import("drizzle-zod/utils").Json | undefined;
    interventionRecommendations?: import("drizzle-zod/utils").Json | undefined;
    referralNeeds?: import("drizzle-zod/utils").Json | undefined;
    safetyPlanning?: import("drizzle-zod/utils").Json | undefined;
}, {
    sessionId: string;
    assessmentType: string;
    userId?: string | null | undefined;
    isActive?: boolean | null | undefined;
    copingStrategies?: import("drizzle-zod/utils").Json | undefined;
    depressionScore?: number | null | undefined;
    anxietyScore?: number | null | undefined;
    distressLevel?: number | null | undefined;
    suicideRiskLevel?: string | null | undefined;
    socialSupportNetwork?: import("drizzle-zod/utils").Json | undefined;
    financialConcerns?: import("drizzle-zod/utils").Json | undefined;
    workConcerns?: import("drizzle-zod/utils").Json | undefined;
    insuranceIssues?: import("drizzle-zod/utils").Json | undefined;
    transportationBarriers?: import("drizzle-zod/utils").Json | undefined;
    childcareEldercareNeeds?: import("drizzle-zod/utils").Json | undefined;
    housingStability?: import("drizzle-zod/utils").Json | undefined;
    substanceUseHistory?: import("drizzle-zod/utils").Json | undefined;
    traumaHistory?: import("drizzle-zod/utils").Json | undefined;
    mentalHealthHistory?: import("drizzle-zod/utils").Json | undefined;
    culturalFactors?: import("drizzle-zod/utils").Json | undefined;
    bodyImageConcerns?: import("drizzle-zod/utils").Json | undefined;
    sexualityIntimacyConcerns?: import("drizzle-zod/utils").Json | undefined;
    existentialConcerns?: import("drizzle-zod/utils").Json | undefined;
    aiPsychosocialInsights?: import("drizzle-zod/utils").Json | undefined;
    interventionRecommendations?: import("drizzle-zod/utils").Json | undefined;
    referralNeeds?: import("drizzle-zod/utils").Json | undefined;
    safetyPlanning?: import("drizzle-zod/utils").Json | undefined;
}>;
export type ValidatedSymptomAssessment = typeof validatedSymptomAssessments.$inferSelect;
export type InsertValidatedSymptomAssessment = z.infer<typeof insertValidatedSymptomAssessmentSchema>;
export type PainPhenotype = typeof painPhenotypes.$inferSelect;
export type InsertPainPhenotype = z.infer<typeof insertPainPhenotypeSchema>;
export type CommunicationLog = typeof communicationLogs.$inferSelect;
export type InsertCommunicationLog = z.infer<typeof insertCommunicationLogSchema>;
export type SpiritualAssessment = typeof spiritualAssessments.$inferSelect;
export type InsertSpiritualAssessment = z.infer<typeof insertSpiritualAssessmentSchema>;
export type OncologicalEmergency = typeof oncologicalEmergencies.$inferSelect;
export type InsertOncologicalEmergency = z.infer<typeof insertOncologicalEmergencySchema>;
export type PalliativeQualityMetric = typeof palliativeQualityMetrics.$inferSelect;
export type InsertPalliativeQualityMetric = z.infer<typeof insertPalliativeQualityMetricSchema>;
export type CaregiverAssessment = typeof caregiverAssessments.$inferSelect;
export type InsertCaregiverAssessment = z.infer<typeof insertCaregiverAssessmentSchema>;
export type EnhancedPsychosocialAssessment = typeof enhancedPsychosocialAssessments.$inferSelect;
export type InsertEnhancedPsychosocialAssessment = z.infer<typeof insertEnhancedPsychosocialAssessmentSchema>;
